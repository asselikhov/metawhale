/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–æ–π P2P —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
 * 
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:
 * - –†–∞–±–æ—Ç–∞ —Å 10 —Ñ–∏–∞—Ç–Ω—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç
 * - –ú—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ü–µ–Ω
 * - –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö
 */

const fiatCurrencyService = require('../src/services/fiatCurrencyService');
const fiatReserveService = require('../src/services/fiatReserveService');

class MultiCurrencyP2PDemo {
  async runDemo() {
    try {
      console.log('üåç –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ú–£–õ–¨–¢–ò–í–ê–õ–Æ–¢–ù–û–ô P2P –°–ò–°–¢–ï–ú–´');
      console.log('='.repeat(70));
      
      // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è 1: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–∞–ª—é—Ç—ã
      await this.demonstrateSupportedCurrencies();
      
      // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è 2: –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è
      await this.demonstrateExchangeRates();
      
      // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è 3: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç
      await this.demonstrateCurrencyFormatting();
      
      // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è 4: –ú—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω—ã–µ –æ—Ä–¥–µ—Ä–∞
      await this.demonstrateMultiCurrencyOrders();
      
      // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è 5: –°—Ü–µ–Ω–∞—Ä–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏
      await this.demonstrateTradingScenarios();
      
      console.log('\nüéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:', error);
    }
  }

  /**
   * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –≤–∞–ª—é—Ç
   */
  async demonstrateSupportedCurrencies() {
    console.log('\nüí∞ –ü–û–î–î–ï–†–ñ–ò–í–ê–ï–ú–´–ï –í–ê–õ–Æ–¢–´');
    console.log('-'.repeat(40));
    
    const currencies = fiatCurrencyService.getSupportedCurrencies();
    
    console.log('üìã –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –≤–∞–ª—é—Ç:');
    currencies.forEach((currency, index) => {
      console.log(`  ${index + 1}. ${currency.flag} ${currency.code} - ${currency.nameRu}`);
      console.log(`     –°–∏–º–≤–æ–ª: ${currency.symbol}, –î–µ—Å—è—Ç–∏—á–Ω—ã–µ –∑–Ω–∞–∫–∏: ${currency.decimals}`);
    });
    
    console.log(`\n‚úÖ –í—Å–µ–≥–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è: ${currencies.length} –≤–∞–ª—é—Ç`);
  }

  /**
   * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
   */
  async demonstrateExchangeRates() {
    console.log('\nüí± –ö–£–†–°–´ –í–ê–õ–Æ–¢ –ò –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø');
    console.log('-'.repeat(40));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫—É—Ä—Å—ã
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç...');
    const updateResult = await fiatCurrencyService.updateAllExchangeRates();
    
    if (updateResult.success) {
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∫—É—Ä—Å–æ–≤: ${updateResult.updatedCount}`);
    } else {
      console.log(`‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è fallback –∫—É—Ä—Å—ã: ${updateResult.error}`);
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—É—Ä—Å—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–∞–ª—é—Ç –∫ USD
    const majorCurrencies = ['RUB', 'EUR', 'CNY', 'JPY'];
    console.log('\nüìä –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –∫ USD:');
    
    for (const currency of majorCurrencies) {
      try {
        const rate = await fiatCurrencyService.getExchangeRate('USD', currency);
        const metadata = fiatCurrencyService.getCurrencyMetadata(currency);
        console.log(`  ${metadata.flag} 1 USD = ${fiatCurrencyService.formatAmount(rate, currency)}`);
      } catch (error) {
        console.log(`  ${currency}: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞`);
      }
    }
    
    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
    console.log('\nüîÑ –ü—Ä–∏–º–µ—Ä—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:');
    const conversionExamples = [
      { amount: 100, from: 'USD', to: 'RUB' },
      { amount: 100, from: 'EUR', to: 'USD' },
      { amount: 10000, from: 'JPY', to: 'USD' },
      { amount: 500, from: 'CNY', to: 'EUR' }
    ];
    
    for (const example of conversionExamples) {
      try {
        const converted = await fiatCurrencyService.convertAmount(example.amount, example.from, example.to);
        const fromFormatted = fiatCurrencyService.formatAmount(example.amount, example.from);
        const toFormatted = fiatCurrencyService.formatAmount(converted, example.to);
        console.log(`  ${fromFormatted} ‚Üí ${toFormatted}`);
      } catch (error) {
        console.log(`  –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ ${example.from}/${example.to}`);
      }
    }
  }

  /**
   * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç
   */
  async demonstrateCurrencyFormatting() {
    console.log('\nüé® –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –í–ê–õ–Æ–¢');
    console.log('-'.repeat(40));
    
    const amounts = [0.99, 15.50, 1234.56, 999999.99];
    const currencies = ['USD', 'RUB', 'EUR', 'JPY', 'VND'];
    
    console.log('üí∞ –ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö —Å—É–º–º:');
    
    for (const amount of amounts) {
      console.log(`\n  –°—É–º–º–∞: ${amount}`);
      for (const currency of currencies) {
        try {
          const formatted = fiatCurrencyService.formatAmount(amount, currency);
          const metadata = fiatCurrencyService.getCurrencyMetadata(currency);
          console.log(`    ${metadata.flag} ${currency}: ${formatted}`);
        } catch (error) {
          console.log(`    ${currency}: –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è`);
        }
      }
    }
    
    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    console.log('\nüåç –ú—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ü–µ–Ω:');
    const baseAmount = 100;
    const baseCurrency = 'USD';
    
    try {
      const conversions = await fiatCurrencyService.getMultiCurrencyDisplay(
        baseAmount, 
        baseCurrency, 
        ['RUB', 'EUR', 'CNY', 'JPY']
      );
      
      console.log(`  –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞: ${fiatCurrencyService.formatAmount(baseAmount, baseCurrency)}`);
      console.log('  –≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç—ã:');
      
      conversions.forEach(conversion => {
        console.log(`    ${conversion.flag} ${conversion.formatted}`);
      });
      
    } catch (error) {
      console.log('  –û—à–∏–±–∫–∞ –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    }
  }

  /**
   * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤
   */
  async demonstrateMultiCurrencyOrders() {
    console.log('\nüìã –ú–£–õ–¨–¢–ò–í–ê–õ–Æ–¢–ù–´–ï P2P –û–†–î–ï–†–ê');
    console.log('-'.repeat(40));
    
    // –ü—Ä–∏–º–µ—Ä—ã –æ—Ä–¥–µ—Ä–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö
    const orderExamples = [
      {
        type: 'buy',
        amount: 100,
        pricePerToken: 15.50,
        currency: 'USD',
        description: '–ü–æ–∫—É–ø–∫–∞ CES –∑–∞ –¥–æ–ª–ª–∞—Ä—ã'
      },
      {
        type: 'sell',
        amount: 50,
        pricePerToken: 1200,
        currency: 'RUB',
        description: '–ü—Ä–æ–¥–∞–∂–∞ CES –∑–∞ —Ä—É–±–ª–∏'
      },
      {
        type: 'buy',
        amount: 200,
        pricePerToken: 13.20,
        currency: 'EUR',
        description: '–ü–æ–∫—É–ø–∫–∞ CES –∑–∞ –µ–≤—Ä–æ'
      },
      {
        type: 'sell',
        amount: 75,
        pricePerToken: 110,
        currency: 'CNY',
        description: '–ü—Ä–æ–¥–∞–∂–∞ CES –∑–∞ —é–∞–Ω–∏'
      }
    ];
    
    console.log('üìä –ü—Ä–∏–º–µ—Ä—ã –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤:');
    
    for (let i = 0; i < orderExamples.length; i++) {
      const order = orderExamples[i];
      const metadata = fiatCurrencyService.getCurrencyMetadata(order.currency);
      const totalValue = order.amount * order.pricePerToken;
      
      console.log(`\n  ${i + 1}. ${order.description}`);
      console.log(`     ${metadata.flag} ${order.type.toUpperCase()}: ${order.amount} CES`);
      console.log(`     –¶–µ–Ω–∞: ${fiatCurrencyService.formatAmount(order.pricePerToken, order.currency)} –∑–∞ —Ç–æ–∫–µ–Ω`);
      console.log(`     –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${fiatCurrencyService.formatAmount(totalValue, order.currency)}`);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º USD —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç—ã
      try {
        const priceInUSD = await fiatCurrencyService.convertAmount(order.pricePerToken, order.currency, 'USD');
        const totalInUSD = await fiatCurrencyService.convertAmount(totalValue, order.currency, 'USD');
        
        console.log(`     USD —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç: $${priceInUSD.toFixed(4)} –∑–∞ —Ç–æ–∫–µ–Ω ($${totalInUSD.toFixed(2)} –æ–±—â–∞—è)`);
      } catch (error) {
        console.log('     USD —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
    }
  }

  /**
   * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
   */
  async demonstrateTradingScenarios() {
    console.log('\nü§ù –°–¶–ï–ù–ê–†–ò–ò –ú–£–õ–¨–¢–ò–í–ê–õ–Æ–¢–ù–û–ô –¢–û–†–ì–û–í–õ–ò');
    console.log('-'.repeat(40));
    
    // –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º—ç—Ç—á–∏–Ω–≥ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç
    console.log('\nüìà –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º—ç—Ç—á–∏–Ω–≥ –æ—Ä–¥–µ—Ä–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö');
    
    const buyOrderUSD = {
      currency: 'USD',
      amount: 100,
      pricePerToken: 15.50
    };
    
    const sellOrderEUR = {
      currency: 'EUR',
      amount: 100,
      pricePerToken: 13.20
    };
    
    console.log('  –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç:');
    console.log(`    üí∞ ${buyOrderUSD.amount} CES –ø–æ ${fiatCurrencyService.formatAmount(buyOrderUSD.pricePerToken, 'USD')} –∑–∞ —Ç–æ–∫–µ–Ω`);
    
    console.log('  –ü—Ä–æ–¥–∞–≤–µ—Ü –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç:');
    console.log(`    üí∞ ${sellOrderEUR.amount} CES –ø–æ ${fiatCurrencyService.formatAmount(sellOrderEUR.pricePerToken, 'EUR')} –∑–∞ —Ç–æ–∫–µ–Ω`);
    
    try {
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—ã –≤ –æ–±—â—É—é –≤–∞–ª—é—Ç—É (USD) –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
      const buyPriceInUSD = buyOrderUSD.pricePerToken; // –£–∂–µ –≤ USD
      const sellPriceInUSD = await fiatCurrencyService.convertAmount(sellOrderEUR.pricePerToken, 'EUR', 'USD');
      
      console.log('\n  üîÑ –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ü–µ–Ω –≤ USD:');
      console.log(`    –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –≥–æ—Ç–æ–≤ –ø–ª–∞—Ç–∏—Ç—å: $${buyPriceInUSD.toFixed(4)} –∑–∞ —Ç–æ–∫–µ–Ω`);
      console.log(`    –ü—Ä–æ–¥–∞–≤–µ—Ü —Ç—Ä–µ–±—É–µ—Ç: $${sellPriceInUSD.toFixed(4)} –∑–∞ —Ç–æ–∫–µ–Ω`);
      
      if (buyPriceInUSD >= sellPriceInUSD) {
        const profit = buyPriceInUSD - sellPriceInUSD;
        console.log(`  ‚úÖ –ú–≠–¢–ß–ò–ù–ì –í–û–ó–ú–û–ñ–ï–ù! –°–ø—Ä–µ–¥: $${profit.toFixed(4)} –≤ –ø–æ–ª—å–∑—É –ø—Ä–æ–¥–∞–≤—Ü–∞`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å–¥–µ–ª–∫—É
        const tradePrice = sellPriceInUSD; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—É –ø—Ä–æ–¥–∞–≤—Ü–∞
        const tradePriceInEUR = await fiatCurrencyService.convertAmount(tradePrice, 'USD', 'EUR');
        
        console.log('\n  üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–¥–µ–ª–∫–∏:');
        console.log(`    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${buyOrderUSD.amount} CES`);
        console.log(`    –¶–µ–Ω–∞: $${tradePrice.toFixed(4)} –∑–∞ —Ç–æ–∫–µ–Ω (‚Ç¨${tradePriceInEUR.toFixed(4)})`);
        console.log(`    –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –ø–ª–∞—Ç–∏—Ç: ${fiatCurrencyService.formatAmount(buyOrderUSD.amount * tradePrice, 'USD')}`);
        console.log(`    –ü—Ä–æ–¥–∞–≤–µ—Ü –ø–æ–ª—É—á–∞–µ—Ç: ${fiatCurrencyService.formatAmount(sellOrderEUR.amount * tradePriceInEUR, 'EUR')}`);
        
      } else {
        const gap = sellPriceInUSD - buyPriceInUSD;
        console.log(`  ‚ùå –ú—ç—Ç—á–∏–Ω–≥ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω. –†–∞–∑—Ä—ã–≤ —Ü–µ–Ω: $${gap.toFixed(4)}`);
      }
      
    } catch (error) {
      console.log('  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –º—ç—Ç—á–∏–Ω–≥–∞');
    }
    
    // –°—Ü–µ–Ω–∞—Ä–∏–π 2: –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö
    console.log('\nüè¶ –°—Ü–µ–Ω–∞—Ä–∏–π 2: –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö');
    
    const reserveExamples = [
      { currency: 'USD', amount: 1500, description: '–ö—Ä—É–ø–Ω—ã–π –¥–æ–ª–ª–∞—Ä–æ–≤—ã–π –æ—Ä–¥–µ—Ä' },
      { currency: 'EUR', amount: 1200, description: '–ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–π —Ç—Ä–µ–π–¥–µ—Ä' },
      { currency: 'RUB', amount: 120000, description: '–†–æ—Å—Å–∏–π—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' },
      { currency: 'CNY', amount: 10000, description: '–ö–∏—Ç–∞–π—Å–∫–∏–π –∏–Ω–≤–µ—Å—Ç–æ—Ä' }
    ];
    
    for (const example of reserveExamples) {
      console.log(`\n  ${example.description}:`);
      console.log(`    –í–∞–ª—é—Ç–∞: ${fiatCurrencyService.getCurrencyMetadata(example.currency).flag} ${example.currency}`);
      console.log(`    –°—É–º–º–∞: ${fiatCurrencyService.formatAmount(example.amount, example.currency)}`);
      
      try {
        const usdEquivalent = await fiatCurrencyService.convertAmount(example.amount, example.currency, 'USD');
        console.log(`    USD —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç: $${usdEquivalent.toFixed(2)}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ CES (–ø—Ä–∏ —Ü–µ–Ω–µ $15 –∑–∞ —Ç–æ–∫–µ–Ω)
        const approximateCES = usdEquivalent / 15;
        console.log(`    –ü—Ä–∏–º–µ—Ä–Ω–æ CES: ${approximateCES.toFixed(2)} —Ç–æ–∫–µ–Ω–æ–≤`);
        
      } catch (error) {
        console.log('    USD —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
    }
    
    // –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\nüìä –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏');
    
    try {
      const globalStats = await fiatReserveService.getGlobalStats();
      
      console.log('  üíº –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∑–µ—Ä–≤–æ–≤ –ø–æ –≤–∞–ª—é—Ç–∞–º:');
      if (globalStats.byCurrency && globalStats.byCurrency.length > 0) {
        globalStats.byCurrency.forEach(currencyStats => {
          const metadata = fiatCurrencyService.getCurrencyMetadata(currencyStats._id);
          console.log(`    ${metadata.flag} ${currencyStats._id}: $${currencyStats.totalAmountInUSD.toFixed(2)} USD —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç`);
        });
      } else {
        console.log('    (–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö - —ç—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è)');
      }
      
      console.log('\n  üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
      console.log(`    –û–±—â–∏–π –æ–±—ä–µ–º —Ä–µ–∑–µ—Ä–≤–æ–≤: $${globalStats.totals.totalReservesInUSD.toFixed(2)}`);
      console.log(`    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑–µ—Ä–≤–æ–≤: ${globalStats.totals.totalReserves}`);
      console.log(`    –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${globalStats.totals.uniqueUsers}`);
      
    } catch (error) {
      console.log('  üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (—Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ä–µ–¥–∞)');
    }
  }
}

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  const demo = new MultiCurrencyP2PDemo();
  demo.runDemo()
    .then(() => {
      console.log('\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\nüí• –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:', error);
      process.exit(1);
    });
}

module.exports = MultiCurrencyP2PDemo;