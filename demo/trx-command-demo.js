/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã /trx —Å –Ω–æ–≤–æ–π P2P –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
 */

console.log('üî¥ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã /trx...\n');

async function demonstrateTRXCommand() {
  try {
    const BaseCommandHandler = require('../src/handlers/BaseCommandHandler');
    const priceService = require('../src/services/priceService');
    
    console.log('üì± –°–∏–º—É–ª—è—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã /trx...\n');
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const handler = new BaseCommandHandler();
    const priceData = await priceService.getTRXPrice();
    const tokenConfig = handler.getTokenDisplayConfig('TRX');
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ
    const changeEmoji = priceData.change24h >= 0 ? 'üî∫' : 'üîª';
    const changeSign = priceData.change24h >= 0 ? '+' : '';
    
    let volumeDisplay = '';
    if (priceData.volume24h) {
      volumeDisplay = ` ‚Ä¢ üÖ• $ ${priceService.formatNumber(priceData.volume24h)}`;
    }
    
    // –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è TRX —Å P2P –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    const message = `‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
${tokenConfig.emoji} –¶–µ–Ω–∞ —Ç–æ–∫–µ–Ω–∞ TRX: $ ${priceData.price.toFixed(tokenConfig.priceDecimals)} | ‚ÇΩ ${priceData.priceRub.toFixed(2)}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
${changeEmoji} ${changeSign}${priceData.change24h.toFixed(1)}%${volumeDisplay}

–¢–æ—Ä–≥—É–π TRX —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ  
P2P –ë–∏—Ä–∂–∞: –ü–æ–∫—É–ø–∫–∞ –∏ –ø—Ä–æ–¥–∞–∂–∞ –∑–∞ ‚ÇΩ`;
    
    console.log('üéâ –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –ö–û–ú–ê–ù–î–´ /trx:');
    console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
    message.split('\n').forEach(line => {
      const paddedLine = line.padEnd(55);
      console.log(`‚îÇ ${paddedLine} ‚îÇ`);
    });
    console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n');
    
    console.log('üìä –î–µ—Ç–∞–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π:');
    console.log('‚úÖ Emoji TRX: üî¥');
    console.log(`‚úÖ –¶–µ–Ω–∞: $${priceData.price.toFixed(4)} (‚ÇΩ${priceData.priceRub.toFixed(2)})`);
    console.log(`‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–µ: ${changeEmoji} ${changeSign}${priceData.change24h.toFixed(1)}%`);
    console.log('‚úÖ P2P –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: "–¢–æ—Ä–≥—É–π TRX —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ"');
    console.log('‚úÖ –°—Å—ã–ª–∫–∞: P2P –ë–∏—Ä–∂–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∑–∞ ‚ÇΩ');
    
    console.log('\nüîÑ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:');
    console.log('‚ùå –ë–´–õ–û: "TRON –±–ª–æ–∫—á–µ–π–Ω ‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ ‚Ä¢ –í—ã—Å–æ–∫–∞—è –ø—Ä–æ–ø—É—Å–∫–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å"');
    console.log('‚úÖ –°–¢–ê–õ–û: "–¢–æ—Ä–≥—É–π TRX —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ + P2P –ë–∏—Ä–∂–∞: –ü–æ–∫—É–ø–∫–∞ –∏ –ø—Ä–æ–¥–∞–∂–∞ –∑–∞ ‚ÇΩ"');
    
    console.log('\nüîÑ –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã —Ç–æ–∂–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å:');
    
    // –ü—Ä–∏–º–µ—Ä—ã –¥—Ä—É–≥–∏—Ö —Ç–æ–∫–µ–Ω–æ–≤
    const otherTokens = [
      { symbol: 'BNB', emoji: 'üü°', name: 'BNB' },
      { symbol: 'SOL', emoji: 'üü¢', name: 'SOL' },
      { symbol: 'ETH', emoji: 'üîµ', name: 'ETH' },
      { symbol: 'USDT', emoji: 'üíµ', name: 'USDT' }
    ];
    
    otherTokens.forEach(token => {
      console.log(`   ${token.emoji} /${token.symbol.toLowerCase()} ‚Üí "–¢–æ—Ä–≥—É–π ${token.symbol} —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ + P2P –ë–∏—Ä–∂–∞"`);
    });
    
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:', error);
    return false;
  }
}

async function main() {
  console.log('üéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –í–°–ï–• –∫–æ–º–∞–Ω–¥ —Ç–æ–∫–µ–Ω–æ–≤');
  console.log('üìù –¢–µ–ø–µ—Ä—å –í–°–ï –∫–æ–º–∞–Ω–¥—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç P2P –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞\n');
  
  const success = await demonstrateTRXCommand();
  
  if (success) {
    console.log('\nüéä –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    console.log('‚úÖ –ö–æ–º–∞–Ω–¥–∞ /trx —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –∑–∞–ø—Ä–æ—à–µ–Ω–æ');
    console.log('‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç "–¢–æ—Ä–≥—É–π TRX —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ"');
    console.log('‚úÖ –í–°–ï –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–∂–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ');
    console.log('‚úÖ –ö–∞–∂–¥–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ —Ç–æ–∫–µ–Ω–∞');
    
    console.log('\nüéØ –ü—Ä–∏–º–µ—Ä—ã:');
    console.log('   /ces ‚Üí "–¢–æ—Ä–≥—É–π CES —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ"');
    console.log('   /trx ‚Üí "–¢–æ—Ä–≥—É–π TRX —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ"');
    console.log('   /bnb ‚Üí "–¢–æ—Ä–≥—É–π BNB —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ"');
    console.log('   /pol ‚Üí "–¢–æ—Ä–≥—É–π POL —É–¥–æ–±–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ"');
    console.log('   –ò —Ç.–¥. –¥–ª—è –≤—Å–µ—Ö 13 —Ç–æ–∫–µ–Ω–æ–≤');
    
    console.log('\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é!');
  } else {
    console.log('\n‚ùå –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞');
  }
}

if (require.main === module) {
  main()
    .then(() => {
      console.log('\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\nüí• –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:', error);
      process.exit(1);
    });
}