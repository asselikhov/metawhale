/**
 * Return Remaining Escrow Script
 * –í–æ–∑–≤—Ä–∞—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è 1.3 CES —Å —ç—Å–∫—Ä–æ—É —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 0x1A1432d6D4eFe75651f2c39DC1Ec6a5D936f401d
 */

require('dotenv').config();
const mongoose = require('mongoose');
const { User, EscrowTransaction } = require('../src/database/models');
const escrowService = require('../src/services/escrowService');

const TARGET_WALLET = '0x1A1432d6D4eFe75651f2c39DC1Ec6a5D936f401d';

async function returnRemainingEscrow() {
  try {
    console.log('üí∞ –í–û–ó–í–†–ê–¢ –û–°–¢–ê–í–®–ò–•–°–Ø –°–†–ï–î–°–¢–í –° –≠–°–ö–†–û–£');
    console.log('=====================================');
    console.log(`üéØ –ö–æ—à–µ–ª–µ–∫: ${TARGET_WALLET}`);
    console.log('');
    
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await User.findOne({ walletAddress: TARGET_WALLET });
    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞');
      return;
    }
    
    console.log(`\nüë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: ${user.firstName} (${user.chatId})`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –±–∞–ª–∞–Ω—Å–æ–≤
    console.log(`\nüìä –¢–ï–ö–£–©–ò–ï –ë–ê–õ–ê–ù–°–´:`);
    console.log(`   - –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å CES: ${user.cesBalance || 0} CES`);
    console.log(`   - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –≤ —ç—Å–∫—Ä–æ—É: ${user.escrowCESBalance || 0} CES`);
    console.log(`   - –û–±—â–∏–π –±–∞–ª–∞–Ω—Å –≤ –ë–î: ${(user.cesBalance || 0) + (user.escrowCESBalance || 0)} CES`);
    
    const escrowAmount = user.escrowCESBalance || 0;
    
    if (escrowAmount <= 0.001) {
      console.log(`\n‚úÖ –ù–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å —ç—Å–∫—Ä–æ—É (–±–∞–ª–∞–Ω—Å: ${escrowAmount} CES)`);
      return;
    }
    
    console.log(`\nüí∞ –ù–ê–ô–î–ï–ù–û –°–†–ï–î–°–¢–í –î–õ–Ø –í–û–ó–í–†–ê–¢–ê: ${escrowAmount.toFixed(4)} CES`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —ç—Å–∫—Ä–æ—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log(`\nüìã –ü–û–°–õ–ï–î–ù–ò–ï –≠–°–ö–†–û–£ –¢–†–ê–ù–ó–ê–ö–¶–ò–ò:`);
    const recentEscrowTxs = await EscrowTransaction.find({
      userId: user._id,
      tokenType: 'CES'
    }).sort({ createdAt: -1 }).limit(5);
    
    recentEscrowTxs.forEach((tx, index) => {
      const date = tx.createdAt.toLocaleString('ru-RU');
      console.log(`   ${index + 1}. ${date} | ${tx.type.toUpperCase()}: ${tx.amount} CES (${tx.status})`);
      console.log(`      –ü—Ä–∏—á–∏–Ω–∞: ${tx.reason || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
    });
    
    console.log(`\nüîÑ –í–´–ü–û–õ–ù–Ø–Æ –í–û–ó–í–†–ê–¢ –°–†–ï–î–°–¢–í –° –≠–°–ö–†–û–£...`);
    
    try {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å —ç—Å–∫—Ä–æ—É –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
      await escrowService.refundTokensFromEscrow(
        user._id,
        null, // –ù–µ—Ç —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å–¥–µ–ª–∫–∏
        'CES',
        escrowAmount,
        '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å—Ä–µ–¥—Å—Ç–≤ —Å —ç—Å–∫—Ä–æ—É - —Ä—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ'
      );
      
      console.log(`‚úÖ –£–°–ü–ï–®–ù–û –í–û–ó–í–†–ê–©–ï–ù–û: ${escrowAmount.toFixed(4)} CES`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
      const updatedUser = await User.findById(user._id);
      console.log(`\nüí∞ –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –ë–ê–õ–ê–ù–°–´:`);
      console.log(`   - –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å CES: ${updatedUser.cesBalance || 0} CES`);
      console.log(`   - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –≤ —ç—Å–∫—Ä–æ—É: ${updatedUser.escrowCESBalance || 0} CES`);
      console.log(`   - –û–±—â–∏–π –±–∞–ª–∞–Ω—Å –≤ –ë–î: ${(updatedUser.cesBalance || 0) + (updatedUser.escrowCESBalance || 0)} CES`);
      
      console.log(`\nüéâ –û–ü–ï–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!`);
      console.log(`üí∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ —Å —ç—Å–∫—Ä–æ—É: ${escrowAmount.toFixed(4)} CES`);
      
    } catch (refundError) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤: ${refundError.message}`);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –ø—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–≤
      console.log(`\nüîÑ –ü–†–û–ë–£–Æ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô –°–ü–û–°–û–ë - –ü–†–Ø–ú–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ë–ê–õ–ê–ù–°–û–í...`);
      
      try {
        const oldAvailable = user.cesBalance || 0;
        const oldEscrow = user.escrowCESBalance || 0;
        
        // –ü–µ—Ä–µ–Ω–æ—Å–∏–º —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏–∑ —ç—Å–∫—Ä–æ—É –≤ –¥–æ—Å—Ç—É–ø–Ω—ã–µ
        user.cesBalance = oldAvailable + oldEscrow;
        user.escrowCESBalance = 0;
        user.lastBalanceUpdate = new Date();
        
        await user.save();
        
        // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –≤–æ–∑–≤—Ä–∞—Ç–µ
        const refundTx = new EscrowTransaction({
          userId: user._id,
          tradeId: null,
          type: 'refund',
          tokenType: 'CES',
          amount: oldEscrow,
          status: 'completed',
          reason: '–ü—Ä—è–º–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å—Ä–µ–¥—Å—Ç–≤ —Å —ç—Å–∫—Ä–æ—É',
          completedAt: new Date()
        });
        
        await refundTx.save();
        
        console.log(`‚úÖ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô –°–ü–û–°–û–ë –£–°–ü–ï–®–ï–ù!`);
        console.log(`   - –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${oldAvailable.toFixed(4)} ‚Üí ${user.cesBalance.toFixed(4)} CES`);
        console.log(`   - –≠—Å–∫—Ä–æ—É –±–∞–ª–∞–Ω—Å: ${oldEscrow.toFixed(4)} ‚Üí ${user.escrowCESBalance} CES`);
        console.log(`   - –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å –æ –≤–æ–∑–≤—Ä–∞—Ç–µ: ${refundTx._id}`);
        
      } catch (directError) {
        console.error(`‚ùå –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —Ç–∞–∫–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: ${directError.message}`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\n‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  returnRemainingEscrow().catch(console.error);
}

module.exports = { returnRemainingEscrow };