/**
 * Comprehensive Escrow System Validation
 * –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã —ç—Å–∫—Ä–æ—É –ø–æ—Å–ª–µ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
 */

require('dotenv').config();
const mongoose = require('mongoose');
const { User, P2POrder, P2PTrade, EscrowTransaction } = require('../src/database/models');
const walletService = require('../src/services/walletService');
const escrowCleanupService = require('../src/services/escrowCleanupService');

async function validateEscrowSystem() {
  try {
    console.log('üîç –ö–û–ú–ü–õ–ï–ö–°–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ –≠–°–ö–†–û–£');
    console.log('===================================');
    
    // Connect to database
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    const results = {
      totalUsers: 0,
      usersWithWallets: 0,
      balanceDiscrepancies: 0,
      orphanedEscrows: 0,
      staleOrders: 0,
      staleTrades: 0,
      fixedIssues: 0,
      errors: []
    };
    
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∫–æ—à–µ–ª—å–∫–∞–º–∏
    console.log('\nüìä –ê–ù–ê–õ–ò–ó –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:');
    const users = await User.find({});
    results.totalUsers = users.length;
    
    const usersWithWallets = users.filter(user => user.walletAddress);
    results.usersWithWallets = usersWithWallets.length;
    
    console.log(`   - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${results.totalUsers}`);
    console.log(`   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∫–æ—à–µ–ª—å–∫–∞–º–∏: ${results.usersWithWallets}`);
    
    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–æ–≤
    console.log('\nüí∞ –ü–†–û–í–ï–†–ö–ê –ë–ê–õ–ê–ù–°–û–í:');
    for (const user of usersWithWallets.slice(0, 10)) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã—Ö 10 –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
      try {
        const realBalance = await walletService.getCESBalance(user.walletAddress);
        const dbBalance = (user.cesBalance || 0) + (user.escrowCESBalance || 0);
        const discrepancy = Math.abs(realBalance - dbBalance);
        
        if (discrepancy > 0.0001) {
          results.balanceDiscrepancies++;
          console.log(`   ‚ö†Ô∏è –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ —É ${user.chatId}: –ë–ª–æ–∫—á–µ–π–Ω ${realBalance.toFixed(4)}, –ë–î ${dbBalance.toFixed(4)} CES`);\n          results.errors.push(`Balance discrepancy for user ${user.chatId}: ${discrepancy.toFixed(4)} CES`);\n        } else {\n          console.log(`   ‚úÖ ${user.chatId}: –ë–∞–ª–∞–Ω—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω (${realBalance.toFixed(4)} CES)`);\n        }\n      } catch (error) {\n        results.errors.push(`Failed to check balance for user ${user.chatId}: ${error.message}`);\n      }\n    }\n    \n    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Ä–æ—Ç—Å–∫–∏—Ö —ç—Å–∫—Ä–æ—É\n    console.log('\nüîç –ü–û–ò–°–ö –°–ò–†–û–¢–°–ö–ò–• –≠–°–ö–†–û–£:');\n    const orphanedEscrows = await EscrowTransaction.find({\n      type: 'lock',\n      status: 'completed',\n      tradeId: null,\n      createdAt: { $lt: new Date(Date.now() - 24 * 60 * 60 * 1000) }\n    });\n    \n    results.orphanedEscrows = orphanedEscrows.length;\n    console.log(`   - –ù–∞–π–¥–µ–Ω–æ —Å–∏—Ä–æ—Ç—Å–∫–∏—Ö —ç—Å–∫—Ä–æ—É —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤: ${results.orphanedEscrows}`);\n    \n    for (const escrow of orphanedEscrows.slice(0, 5)) {\n      console.log(`   ‚ö†Ô∏è –°–∏—Ä–æ—Ç—Å–∫–∏–π —ç—Å–∫—Ä–æ—É: ${escrow._id} (${escrow.amount} ${escrow.tokenType})`);\n    }\n    \n    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –æ—Ä–¥–µ—Ä–æ–≤\n    console.log('\nüìã –ü–†–û–í–ï–†–ö–ê –£–°–¢–ê–†–ï–í–®–ò–• –û–†–î–ï–†–û–í:');\n    const staleOrders = await P2POrder.find({\n      status: 'cancelled',\n      escrowLocked: true,\n      escrowAmount: { $gt: 0 },\n      updatedAt: { $lt: new Date(Date.now() - 60 * 60 * 1000) }\n    });\n    \n    results.staleOrders = staleOrders.length;\n    console.log(`   - –ù–∞–π–¥–µ–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤ —Å –Ω–µ–æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã–º —ç—Å–∫—Ä–æ—É: ${results.staleOrders}`);\n    \n    for (const order of staleOrders.slice(0, 5)) {\n      console.log(`   ‚ö†Ô∏è –£—Å—Ç–∞—Ä–µ–≤—à–∏–π –æ—Ä–¥–µ—Ä: ${order._id} (${order.escrowAmount} CES)`);\n    }\n    \n    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫\n    console.log('\nü§ù –ü–†–û–í–ï–†–ö–ê –ü–†–û–°–†–û–ß–ï–ù–ù–´–• –°–î–ï–õ–û–ö:');\n    const staleTrades = await P2PTrade.find({\n      status: { $in: ['escrow_locked', 'payment_pending'] },\n      'timeTracking.createdAt': { $lt: new Date(Date.now() - 2 * 60 * 60 * 1000) }\n    });\n    \n    results.staleTrades = staleTrades.length;\n    console.log(`   - –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ —Å—Ç–∞—Ä—à–µ 2 —á–∞—Å–æ–≤: ${results.staleTrades}`);\n    \n    for (const trade of staleTrades.slice(0, 5)) {\n      const age = (Date.now() - trade.timeTracking.createdAt.getTime()) / (1000 * 60 * 60);\n      console.log(`   ‚ö†Ô∏è –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–∞—è —Å–¥–µ–ª–∫–∞: ${trade._id} (${age.toFixed(1)} —á–∞—Å–æ–≤, ${trade.amount} CES)`);\n    }\n    \n    // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—á–∏—Å—Ç–∫–∏\n    console.log('\nüßπ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–õ–£–ñ–ë–´ –û–ß–ò–°–¢–ö–ò:');\n    const cleanupStats = await escrowCleanupService.getCleanupStatistics();\n    \n    if (cleanupStats) {\n      console.log(`   - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∫–æ—à–µ–ª—å–∫–∞–º–∏: ${cleanupStats.totalUsers}`);\n      console.log(`   - –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —ç—Å–∫—Ä–æ—É: ${cleanupStats.totalEscrowTransactions}`);\n      console.log(`   - –ê–∫—Ç–∏–≤–Ω—ã—Ö —ç—Å–∫—Ä–æ—É: ${cleanupStats.activeEscrows}`);\n      console.log(`   - –°–∏—Ä–æ—Ç—Å–∫–∏—Ö —ç—Å–∫—Ä–æ—É: ${cleanupStats.orphanedEscrows}`);\n      console.log(`   - –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: ${cleanupStats.staleTrades}`);\n      console.log(`   - –ò—Å—Ç–µ–∫—à–∏—Ö –æ—Ä–¥–µ—Ä–æ–≤: ${cleanupStats.expiredOrders}`);\n    }\n    \n    // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n    console.log('\nüîß –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –í –ö–û–î–ï:');\n    const codeChecks = {\n      cancelOrderFix: false,\n      escrowLinkingFix: false,\n      validationFix: false,\n      cleanupServiceFix: false\n    };\n    \n    try {\n      const fs = require('fs');\n      const path = require('path');\n      \n      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è cancelOrder\n      const p2pServiceCode = fs.readFileSync(path.join(__dirname, '../src/services/p2pService.js'), 'utf8');\n      if (p2pServiceCode.includes('refundTokensFromEscrow') && \n          p2pServiceCode.includes(\"order.type === 'sell'\") &&\n          p2pServiceCode.includes('escrowAmount')) {\n        codeChecks.cancelOrderFix = true;\n      }\n      \n      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è —ç—Å–∫—Ä–æ—É\n      if (p2pServiceCode.includes('linkEscrowToTrade')) {\n        codeChecks.escrowLinkingFix = true;\n      }\n      \n      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–ª—É—á—à–µ–Ω–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏\n      const escrowServiceCode = fs.readFileSync(path.join(__dirname, '../src/services/escrowService.js'), 'utf8');\n      if (escrowServiceCode.includes('[ESCROW-LOCK]') && \n          escrowServiceCode.includes('[ESCROW-REFUND]')) {\n        codeChecks.validationFix = true;\n      }\n      \n      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª—É–∂–±—ã –æ—á–∏—Å—Ç–∫–∏\n      const appCode = fs.readFileSync(path.join(__dirname, '../app.js'), 'utf8');\n      if (appCode.includes('escrowCleanupService')) {\n        codeChecks.cleanupServiceFix = true;\n      }\n      \n    } catch (error) {\n      results.errors.push(`Code check failed: ${error.message}`);\n    }\n    \n    console.log(`   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ cancelOrder: ${codeChecks.cancelOrderFix ? '‚úÖ' : '‚ùå'}`);\n    console.log(`   - –£–ª—É—á—à–µ–Ω–∏–µ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è —ç—Å–∫—Ä–æ—É: ${codeChecks.escrowLinkingFix ? '‚úÖ' : '‚ùå'}`);\n    console.log(`   - –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è: ${codeChecks.validationFix ? '‚úÖ' : '‚ùå'}`);\n    console.log(`   - –°–ª—É–∂–±–∞ –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∏: ${codeChecks.cleanupServiceFix ? '‚úÖ' : '‚ùå'}`);\n    \n    // 8. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n    console.log('\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');\n    \n    if (results.balanceDiscrepancies > 0) {\n      console.log(`   ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${results.balanceDiscrepancies} —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π –≤ –±–∞–ª–∞–Ω—Å–∞—Ö - —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è`);\n    }\n    \n    if (results.orphanedEscrows > 0) {\n      console.log(`   ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${results.orphanedEscrows} —Å–∏—Ä–æ—Ç—Å–∫–∏—Ö —ç—Å–∫—Ä–æ—É - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—á–∏—Å—Ç–∫—É`);\n    }\n    \n    if (results.staleOrders > 0) {\n      console.log(`   ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${results.staleOrders} —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –æ—Ä–¥–µ—Ä–æ–≤ - —Ç—Ä–µ–±—É–µ—Ç –æ—á–∏—Å—Ç–∫–∏`);\n    }\n    \n    if (results.staleTrades > 0) {\n      console.log(`   ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${results.staleTrades} –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ - —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç–º–µ–Ω—ã`);\n    }\n    \n    const allCodeChecks = Object.values(codeChecks).every(check => check);\n    if (allCodeChecks) {\n      console.log(`   ‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);\n    } else {\n      console.log(`   ‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç`);\n    }\n    \n    if (results.balanceDiscrepancies === 0 && results.orphanedEscrows === 0 && \n        results.staleOrders === 0 && results.staleTrades === 0 && allCodeChecks) {\n      console.log(`\nüéâ –°–ò–°–¢–ï–ú–ê –≠–°–ö–†–û–£ –í –û–¢–õ–ò–ß–ù–û–ú –°–û–°–¢–û–Ø–ù–ò–ò!`);\n    } else {\n      console.log(`\n‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –í–ù–ò–ú–ê–ù–ò–ï - –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã`);\n    }\n    \n    // 9. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n    console.log('\nüìà –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');\n    console.log(`   - –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${Math.min(10, results.usersWithWallets)}`);\n    console.log(`   - –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π –≤ –±–∞–ª–∞–Ω—Å–∞—Ö: ${results.balanceDiscrepancies}`);\n    console.log(`   - –°–∏—Ä–æ—Ç—Å–∫–∏—Ö —ç—Å–∫—Ä–æ—É: ${results.orphanedEscrows}`);\n    console.log(`   - –£—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –æ—Ä–¥–µ—Ä–æ–≤: ${results.staleOrders}`);\n    console.log(`   - –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: ${results.staleTrades}`);\n    console.log(`   - –û—à–∏–±–æ–∫ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: ${results.errors.length}`);\n    \n    if (results.errors.length > 0) {\n      console.log('\\nüîç –î–ï–¢–ê–õ–ò –û–®–ò–ë–û–ö:');\n      results.errors.slice(0, 5).forEach((error, index) => {\n        console.log(`   ${index + 1}. ${error}`);\n      });\n    }\n    \n    return results;\n    \n  } catch (error) {\n    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã —ç—Å–∫—Ä–æ—É:', error);\n    throw error;\n  } finally {\n    await mongoose.connection.close();\n    console.log('\\nüíæ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');\n  }\n}\n\n// Run validation\nif (require.main === module) {\n  validateEscrowSystem().then(results => {\n    console.log('\\n‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');\n    process.exit(0);\n  }).catch(error => {\n    console.error('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å:', error);\n    process.exit(1);\n  });\n}\n\nmodule.exports = { validateEscrowSystem };