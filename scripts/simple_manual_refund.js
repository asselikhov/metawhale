/**
 * –ü—Ä–æ—Å—Ç–æ–π –ú–∞–Ω—É–∞–ª—å–Ω—ã–π –í–æ–∑–≤—Ä–∞—Ç –≠—Å–∫—Ä–æ—É
 * –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ 1.1 CES –∏–∑ —ç—Å–∫—Ä–æ—É ID 7
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config();

const { ethers } = require('ethers');

// –ñ–µ—Å—Ç–∫–æ –∑–∞–¥–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å—Ä–æ—á–Ω–æ–≥–æ —Å–ª—É—á–∞—è
const TARGET_WALLET = '0x1A1432d6D4eFe75651f2c39DC1Ec6a5D936f401d';
const ESCROW_ID = 7;
const EXPECTED_AMOUNT = 1.1;

// –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const POLYGON_RPC_URL = process.env.POLYGON_RPC_URL || 'https://polygon-rpc.com';
const ADMIN_PRIVATE_KEY = process.env.ADMIN_PRIVATE_KEY;
const ESCROW_CONTRACT_ADDRESS = process.env.ESCROW_CONTRACT_ADDRESS || '0x04B16d50949CD92de90fbadcF49745897CbED5C4';

// ABI –¥–ª—è escrow –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
const ESCROW_ABI = [
  "function refundEscrow(uint256 escrowId) external",
  "function adminRefundEscrow(uint256 escrowId) external", 
  "function getEscrowDetails(uint256 escrowId) external view returns (address, address, uint256, uint256, uint8)",
  "function owner() external view returns (address)"
];

async function simpleManualRefund() {
  try {
    console.log('üöÄ –ü–†–û–°–¢–û–ô –ú–ê–ù–£–ê–õ–¨–ù–´–ô –í–û–ó–í–†–ê–¢ –≠–°–ö–†–û–£');
    console.log('===================================');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
    console.log(`   RPC URL: ${POLYGON_RPC_URL}`);
    console.log(`   Contract: ${ESCROW_CONTRACT_ADDRESS}`);
    console.log(`   Admin Key: ${ADMIN_PRIVATE_KEY ? '–ù–∞–π–¥–µ–Ω' : '–ù–ï –ù–ê–ô–î–ï–ù'}`);
    
    if (!ADMIN_PRIVATE_KEY) {
      console.log('\n‚ùå –û–®–ò–ë–ö–ê: ADMIN_PRIVATE_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      console.log('üí° –†–ï–®–ï–ù–ò–ï:');
      console.log('1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è ADMIN_PRIVATE_KEY');
      console.log('2. –ò–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∞–¥–º–∏–Ω–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ .env —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç ADMIN_PRIVATE_KEY=–≤–∞—à_–ø—Ä–∏–≤–∞—Ç–Ω—ã–π_–∫–ª—é—á');
      return;
    }
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ç–∏
    const provider = new ethers.providers.JsonRpcProvider(POLYGON_RPC_URL);
    const adminWallet = new ethers.Wallet(ADMIN_PRIVATE_KEY, provider);
    
    console.log(`\nüîë –ê–¥–º–∏–Ω—Å–∫–∏–π –∫–æ—à–µ–ª–µ–∫: ${adminWallet.address}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å MATIC
    const balance = await provider.getBalance(adminWallet.address);
    console.log(`üí∞ –ë–∞–ª–∞–Ω—Å MATIC: ${ethers.utils.formatEther(balance)}`);
    
    if (balance.lt(ethers.utils.parseEther('0.01'))) {
      console.log('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ù–∏–∑–∫–∏–π –±–∞–ª–∞–Ω—Å MATIC –¥–ª—è –≥–∞–∑–∞!');
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç
    const contract = new ethers.Contract(ESCROW_CONTRACT_ADDRESS, ESCROW_ABI, adminWallet);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª–∏ —ç—Å–∫—Ä–æ—É
    console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç—Å–∫—Ä–æ—É ID ${ESCROW_ID}...`);
    try {
      const escrowDetails = await contract.getEscrowDetails(ESCROW_ID);
      
      const seller = escrowDetails[0];
      const buyer = escrowDetails[1]; 
      const amount = ethers.utils.formatEther(escrowDetails[2]);
      const timelock = escrowDetails[3].toString();
      const status = escrowDetails[4];
      
      console.log(`   –ü—Ä–æ–¥–∞–≤–µ—Ü: ${seller}`);
      console.log(`   –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: ${buyer}`);
      console.log(`   –°—É–º–º–∞: ${amount} CES`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${status} (${status === 0 ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'})`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥—Ä–µ—Å —Å–æ–≤–ø–∞–¥–∞–µ—Ç
      if (seller.toLowerCase() !== TARGET_WALLET.toLowerCase()) {
        throw new Error(`–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å –ø—Ä–æ–¥–∞–≤—Ü–∞: ${seller}, –æ–∂–∏–¥–∞–ª—Å—è: ${TARGET_WALLET}`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É–º–º—É
      if (Math.abs(parseFloat(amount) - EXPECTED_AMOUNT) > 0.0001) {
        throw new Error(`–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞: ${amount} CES, –æ–∂–∏–¥–∞–ª–æ—Å—å: ${EXPECTED_AMOUNT} CES`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
      if (status !== 0) {
        throw new Error(`–≠—Å–∫—Ä–æ—É –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω (—Å—Ç–∞—Ç—É—Å: ${status})`);
      }
      
      console.log('‚úÖ –≠—Å–∫—Ä–æ—É –ø—Ä–æ–≤–µ—Ä–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      
    } catch (detailsError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç—Å–∫—Ä–æ—É: ${detailsError.message}`);
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—ã –≥–∞–∑–∞
    console.log('\n‚õΩ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω –≥–∞–∑–∞...');
    const gasPrice = await provider.getGasPrice();
    const highGasPrice = gasPrice.mul(3); // –í 3 —Ä–∞–∑–∞ –≤—ã—à–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    
    console.log(`   –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞: ${ethers.utils.formatUnits(gasPrice, 'gwei')} Gwei`);
    console.log(`   –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞: ${ethers.utils.formatUnits(highGasPrice, 'gwei')} Gwei`);
    
    // –ü—Ä–æ–±—É–µ–º –æ–±—ã—á–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç —Å–Ω–∞—á–∞–ª–∞
    console.log(`\nüöÄ –ü–æ–ø—ã—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ –≤–æ–∑–≤—Ä–∞—Ç–∞ —ç—Å–∫—Ä–æ—É...`);
    
    try {
      const tx = await contract.refundEscrow(ESCROW_ID, {
        gasLimit: 300000,
        gasPrice: highGasPrice
      });
      
      console.log(`üìã –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: ${tx.hash}`);
      console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...');
      
      const receipt = await tx.wait(2); // –ñ–¥–µ–º 2 –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
      
      if (receipt.status === 1) {
        console.log(`‚úÖ –£–°–ü–ï–•! –í–æ–∑–≤—Ä–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`);
        console.log(`   –ë–ª–æ–∫: ${receipt.blockNumber}`);
        console.log(`   Gas –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${receipt.gasUsed.toString()}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å
        const walletService = require('../src/services/walletService');
        const newBalance = await walletService.getCESBalance(TARGET_WALLET);
        console.log(`üí∞ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${newBalance} CES`);
        
      } else {
        console.log(`‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å`);
      }
      
    } catch (refundError) {
      console.log(`‚ùå –û–±—ã—á–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç –Ω–µ —É–¥–∞–ª—Å—è: ${refundError.message}`);
      
      // –ü—Ä–æ–±—É–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–π –≤–æ–∑–≤—Ä–∞—Ç
      console.log(`\nüîß –ü–æ–ø—ã—Ç–∫–∞ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –≤–æ–∑–≤—Ä–∞—Ç–∞...`);
      
      try {
        const adminTx = await contract.adminRefundEscrow(ESCROW_ID, {
          gasLimit: 300000,
          gasPrice: highGasPrice
        });
        
        console.log(`üìã –ê–¥–º–∏–Ω—Å–∫–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: ${adminTx.hash}`);
        console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...');
        
        const adminReceipt = await adminTx.wait(2);
        
        if (adminReceipt.status === 1) {
          console.log(`‚úÖ –£–°–ü–ï–•! –ê–¥–º–∏–Ω—Å–∫–∏–π –≤–æ–∑–≤—Ä–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω`);
          console.log(`   –ë–ª–æ–∫: ${adminReceipt.blockNumber}`);
          console.log(`   Gas –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${adminReceipt.gasUsed.toString()}`);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å
          const walletService = require('../src/services/walletService');
          const newBalance = await walletService.getCESBalance(TARGET_WALLET);
          console.log(`üí∞ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${newBalance} CES`);
          
        } else {
          console.log(`‚ùå –ê–¥–º–∏–Ω—Å–∫–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å`);
        }
        
      } catch (adminError) {
        console.log(`‚ùå –ê–¥–º–∏–Ω—Å–∫–∏–π –≤–æ–∑–≤—Ä–∞—Ç –Ω–µ —É–¥–∞–ª—Å—è: ${adminError.message}`);
        
        console.log('\nüõ†Ô∏è –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
        console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ –≤ —Å–º–∞—Ä—Ç–∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ');
        console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
        console.log('3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å MetaMask –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
        console.log('4. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É —Å–º–∞—Ä—Ç–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞');
      }
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  simpleManualRefund()
    .then(() => {
      console.log('\nüéâ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
    })
    .catch((error) => {
      console.error('\nüí• –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:', error.message);
    });
}

module.exports = { simpleManualRefund };