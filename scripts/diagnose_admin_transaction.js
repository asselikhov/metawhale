/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ê–¥–º–∏–Ω—Å–∫–æ–π –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –∑–∞–≤–∏—Å—à–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ —ç—Å–∫—Ä–æ—É
 */

const { ethers } = require('ethers');
const config = require('../src/config/configuration');

const providers = ethers.providers || ethers;

// –•–µ—à–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã
const TX_HASHES = [
  '0xdcfc4de833143ca54bf9fa853e483f15d14560ee0cb6a2c66d43e002014622d9', // –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞
  '0x4014b398f4c878c11f2917053bcfdd2dc22a7f9a593a71c4fa96a9513be0e5ad'  // –í—Ç–æ—Ä–∞—è –ø–æ–ø—ã—Ç–∫–∞
];

const ADMIN_WALLET = '0x98A569b1ee0C4fc19eA802318d9033Dd056C850b';
const CONTRACT_ADDRESS = '0x04B16d50949CD92de90fbadcF49745897CbED5C4';

async function diagnoseAdminTransaction() {
  try {
    const provider = new providers.JsonRpcProvider(config.wallet.polygonRpcUrl);
    
    console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ê–î–ú–ò–ù–°–ö–û–ô –¢–†–ê–ù–ó–ê–ö–¶–ò–ò');
    console.log('=====================================');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ç–∏
    console.log('üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ç–∏...');
    const network = await provider.getNetwork();
    const blockNumber = await provider.getBlockNumber();
    console.log(`   –°–µ—Ç—å: ${network.name} (Chain ID: ${network.chainId})`);
    console.log(`   –¢–µ–∫—É—â–∏–π –±–ª–æ–∫: ${blockNumber}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
    console.log('\nüí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞...');
    const adminBalance = await provider.getBalance(ADMIN_WALLET);
    console.log(`   –ë–∞–ª–∞–Ω—Å MATIC: ${ethers.utils.formatEther(adminBalance)}`);
    
    if (adminBalance.lt(ethers.utils.parseEther('0.01'))) {
      console.log('   ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ù–∏–∑–∫–∏–π –±–∞–ª–∞–Ω—Å MATIC –¥–ª—è –æ–ø–ª–∞—Ç—ã –≥–∞–∑–∞!');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    console.log('\nüìã –ê–Ω–∞–ª–∏–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
    
    for (let i = 0; i < TX_HASHES.length; i++) {
      const txHash = TX_HASHES[i];
      console.log(`\n${i + 1}. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: ${txHash}`);
      
      try {
        const tx = await provider.getTransaction(txHash);
        
        if (!tx) {
          console.log('   ‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–µ—Ç–∏');
          continue;
        }
        
        console.log(`   üì§ –û—Ç: ${tx.from}`);
        console.log(`   üì• –ö: ${tx.to}`);
        console.log(`   ‚õΩ Gas Limit: ${tx.gasLimit?.toString()}`);
        console.log(`   üí∞ Gas Price: ${ethers.utils.formatUnits(tx.gasPrice || 0, 'gwei')} Gwei`);
        console.log(`   üì¶ –ë–ª–æ–∫: ${tx.blockNumber || 'Pending'}`);
        console.log(`   üî¢ Nonce: ${tx.nonce}`);
        
        if (tx.blockNumber) {
          // –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞
          const receipt = await provider.getTransactionReceipt(txHash);
          console.log(`   ‚úÖ –°—Ç–∞—Ç—É—Å: ${receipt.status === 1 ? '–£—Å–ø–µ—à–Ω–æ' : '–ù–µ—É–¥–∞—á–Ω–æ'}`);
          console.log(`   ‚õΩ Gas Used: ${receipt.gasUsed?.toString()}`);
          
          if (receipt.status === 1) {
            console.log('   üéâ –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø –ü–†–û–®–õ–ê –£–°–ü–ï–®–ù–û!');
          } else {
            console.log('   ‚ùå –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø –ü–†–û–í–ê–õ–ò–õ–ê–°–¨');
          }
        } else {
          // –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤ –æ–∂–∏–¥–∞–Ω–∏–∏
          console.log('   ‚è≥ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...');
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–ª–∏—à–∫–æ–º –ª–∏ –Ω–∏–∑–∫–∞—è —Ü–µ–Ω–∞ –≥–∞–∑–∞
          const currentGasPrice = await provider.getGasPrice();
          console.log(`   üí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ –≥–∞–∑–∞ –≤ —Å–µ—Ç–∏: ${ethers.utils.formatUnits(currentGasPrice, 'gwei')} Gwei`);
          
          if (tx.gasPrice && currentGasPrice.gt(tx.gasPrice.mul(2))) {
            console.log('   ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –¶–µ–Ω–∞ –≥–∞–∑–∞ —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∞—è!');
          }
        }
        
      } catch (txError) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ${txError.message}`);
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º nonce –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
    console.log('\nüî¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ nonce –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞...');
    const currentNonce = await provider.getTransactionCount(ADMIN_WALLET, 'latest');
    const pendingNonce = await provider.getTransactionCount(ADMIN_WALLET, 'pending');
    
    console.log(`   –¢–µ–∫—É—â–∏–π nonce: ${currentNonce}`);
    console.log(`   Pending nonce: ${pendingNonce}`);
    
    if (pendingNonce > currentNonce) {
      console.log(`   ‚ö†Ô∏è ${pendingNonce - currentNonce} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –æ–∂–∏–¥–∞–Ω–∏–∏`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã –≥–∞–∑–∞
    console.log('\n‚õΩ –¢–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã –≥–∞–∑–∞...');
    const gasPrice = await provider.getGasPrice();
    const feeData = await provider.getFeeData();
    
    console.log(`   –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ –≥–∞–∑–∞: ${ethers.utils.formatUnits(gasPrice, 'gwei')} Gwei`);
    if (feeData.maxFeePerGas) {
      console.log(`   Max Fee Per Gas: ${ethers.utils.formatUnits(feeData.maxFeePerGas, 'gwei')} Gwei`);
    }
    if (feeData.maxPriorityFeePerGas) {
      console.log(`   Max Priority Fee: ${ethers.utils.formatUnits(feeData.maxPriorityFeePerGas, 'gwei')} Gwei`);
    }
    
    console.log('\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('=====================================');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —ç—Å–∫—Ä–æ—É
    const smartContractService = require('../src/services/smartContractService');
    try {
      const escrowDetails = await smartContractService.getEscrowDetails(7);
      console.log('üîí –°—Ç–∞—Ç—É—Å —ç—Å–∫—Ä–æ—É ID 7:');
      console.log(`   –°—Ç–∞—Ç—É—Å: ${escrowDetails.status === 0 ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}`);
      console.log(`   –°—É–º–º–∞: ${escrowDetails.amount} CES`);
      
      if (escrowDetails.status === 0) {
        console.log('\nüìã –í–∞—Ä–∏–∞–Ω—Ç—ã –¥–µ–π—Å—Ç–≤–∏–π:');
        console.log('1. üîÑ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π —Ü–µ–Ω–æ–π –≥–∞–∑–∞');
        console.log('2. ‚è≥ –ü–æ–¥–æ–∂–¥–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
        console.log('3. üö´ –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—Å—Ç—Ä—è–≤—à—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)');
        console.log('4. üîß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–π –∫–æ—à–µ–ª–µ–∫ (MetaMask) –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
      } else {
        console.log('‚úÖ –≠—Å–∫—Ä–æ—É —É–∂–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
      }
      
    } catch (escrowError) {
      console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —ç—Å–∫—Ä–æ—É: ${escrowError.message}`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
if (require.main === module) {
  diagnoseAdminTransaction()
    .then(() => {
      console.log('\nüéâ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    })
    .catch((error) => {
      console.error('\nüí• –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å:', error);
    });
}

module.exports = { diagnoseAdminTransaction };