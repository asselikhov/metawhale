/**
 * Cancel Stuck Trades Script
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–º–µ–Ω–∞ –∑–∞—Å—Ç—Ä—è–≤—à–∏—Ö —Å–¥–µ–ª–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ—à–µ–ª—å–∫–æ–º 0x1A1432d6D4eFe75651f2c39DC1Ec6a5D936f401d
 */

require('dotenv').config();
const mongoose = require('mongoose');
const { User, P2PTrade, EscrowTransaction } = require('../src/database/models');
const escrowService = require('../src/services/escrowService');

const TARGET_WALLET = '0x1A1432d6D4eFe75651f2c39DC1Ec6a5D936f401d';

async function cancelStuckTrades() {
  try {
    console.log('üîß –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–¢–ú–ï–ù–ê –ó–ê–°–¢–†–Ø–í–®–ò–• –°–î–ï–õ–û–ö');
    console.log('==========================================');
    console.log(`üéØ –ö–æ—à–µ–ª–µ–∫: ${TARGET_WALLET}`);
    console.log('');
    
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∞–¥—Ä–µ—Å—É –∫–æ—à–µ–ª—å–∫–∞
    const user = await User.findOne({ walletAddress: TARGET_WALLET });
    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞');
      return;
    }
    
    console.log(`\nüë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: ${user.firstName} (${user.chatId})`);
    
    // –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø—Ä–æ–¥–∞–≤–µ—Ü
    const stuckTrades = await P2PTrade.find({
      sellerId: user._id,
      status: { $in: ['escrow_locked', 'payment_pending', 'payment_made'] }
    }).populate('buyerId', 'chatId firstName lastName');
    
    console.log(`\nüîç –ù–ê–ô–î–ï–ù–û –ó–ê–°–¢–†–Ø–í–®–ò–• –°–î–ï–õ–û–ö: ${stuckTrades.length}`);
    
    if (stuckTrades.length === 0) {
      console.log('‚úÖ –ù–µ—Ç —Å–¥–µ–ª–æ–∫ –¥–ª—è –æ—Ç–º–µ–Ω—ã');
      return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–π —Å–¥–µ–ª–∫–∏
    console.log(`\nüìã –î–ï–¢–ê–õ–ò –°–î–ï–õ–û–ö:`);
    let totalAmountToReturn = 0;
    
    stuckTrades.forEach((trade, index) => {
      const buyer = trade.buyerId;
      const buyerName = buyer ? `${buyer.firstName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (${buyer.chatId})` : '–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
      
      console.log(`   ${index + 1}. –°–¥–µ–ª–∫–∞ ${trade._id}:`);
      console.log(`      - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${trade.amount} CES`);
      console.log(`      - –¶–µ–Ω–∞: ${trade.pricePerToken} ‚ÇΩ –∑–∞ CES`);
      console.log(`      - –û–±—â–∞—è —Å—É–º–º–∞: ${trade.totalValue} ‚ÇΩ`);
      console.log(`      - –°—Ç–∞—Ç—É—Å: ${trade.status}`);
      console.log(`      - –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: ${buyerName}`);
      console.log(`      - –°–æ–∑–¥–∞–Ω–∞: ${trade.timeTracking?.createdAt?.toLocaleString('ru-RU') || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
      console.log('');
      
      totalAmountToReturn += trade.amount;
    });
    
    console.log(`üí∞ –û–ë–©–ê–Ø –°–£–ú–ú–ê –ö –í–û–ó–í–†–ê–¢–£: ${totalAmountToReturn.toFixed(4)} CES`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –±–∞–ª–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log(`\nüìä –¢–ï–ö–£–©–ò–ï –ë–ê–õ–ê–ù–°–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:`);
    console.log(`   - –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${user.cesBalance || 0} CES`);
    console.log(`   - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –≤ —ç—Å–∫—Ä–æ—É: ${user.escrowCESBalance || 0} CES`);
    
    console.log(`\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–∏—Ç –≤—Å–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏ –∏ –≤–µ—Ä–Ω–µ—Ç —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.`);
    console.log(`üîÑ –í—ã–ø–æ–ª–Ω—è—é –æ—Ç–º–µ–Ω—É –≤—Å–µ—Ö –∑–∞—Å—Ç—Ä—è–≤—à–∏—Ö —Å–¥–µ–ª–æ–∫...`);
    
    // –û—Ç–º–µ–Ω—è–µ–º –∫–∞–∂–¥—É—é —Å–¥–µ–ª–∫—É
    let successfulCancellations = 0;
    let totalReturned = 0;
    
    for (let i = 0; i < stuckTrades.length; i++) {
      const trade = stuckTrades[i];
      
      try {
        console.log(`\nüîÑ –û—Ç–º–µ–Ω—è—é —Å–¥–µ–ª–∫—É ${i + 1}/${stuckTrades.length}: ${trade._id}`);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ —ç—Å–∫—Ä–æ—É
        await escrowService.refundTokensFromEscrow(
          user._id,
          trade._id,
          'CES',
          trade.amount,
          '–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–º–µ–Ω–∞ –∑–∞—Å—Ç—Ä—è–≤—à–µ–π —Å–¥–µ–ª–∫–∏ - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ'
        );
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏
        trade.status = 'cancelled';
        trade.escrowStatus = 'returned';
        trade.disputeReason = '–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–º–µ–Ω–∞ - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ';
        trade.timeTracking.completedAt = new Date();
        
        await trade.save();
        
        console.log(`   ‚úÖ –°–¥–µ–ª–∫–∞ ${trade._id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞`);
        console.log(`   üí∞ –í–æ–∑–≤—Ä–∞—â–µ–Ω–æ: ${trade.amount} CES`);
        
        successfulCancellations++;
        totalReturned += trade.amount;
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–∫—É–ø–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
        if (trade.buyerId && trade.buyerId.chatId) {
          try {
            const botInstance = require('../src/bot/telegramBot');
            const bot = botInstance.getInstance();
            const notificationMessage = `‚ùå –°–î–ï–õ–ö–ê –û–¢–ú–ï–ù–ï–ù–ê\n\n` +
                                       `–°–¥–µ–ª–∫–∞ ${trade._id.toString().slice(-8)} –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.\n` +
                                       `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${trade.amount} CES\n` +
                                       `–°—É–º–º–∞: ${trade.totalValue} ‚ÇΩ\n\n` +
                                       `–ü—Ä–∏—á–∏–Ω–∞: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å —ç—Å–∫—Ä–æ—É.\n` +
                                       `–ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.`;
            
            await bot.telegram.sendMessage(trade.buyerId.chatId, notificationMessage);
            console.log(`   üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é ${trade.buyerId.chatId}`);
          } catch (notifyError) {
            console.log(`   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: ${notifyError.message}`);
          }
        }
        
      } catch (error) {
        console.error(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —Å–¥–µ–ª–∫–∏ ${trade._id}:`, error.message);
      }
    }
    
    console.log(`\n‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –û–ü–ï–†–ê–¶–ò–ò:`);
    console.log(`   - –£—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ —Å–¥–µ–ª–æ–∫: ${successfulCancellations}/${stuckTrades.length}`);
    console.log(`   - –û–±—â–∞—è —Å—É–º–º–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞: ${totalReturned.toFixed(4)} CES`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
    const updatedUser = await User.findById(user._id);
    console.log(`\nüí∞ –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –ë–ê–õ–ê–ù–°–´:`);
    console.log(`   - –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${updatedUser.cesBalance || 0} CES`);
    console.log(`   - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –≤ —ç—Å–∫—Ä–æ—É: ${updatedUser.escrowCESBalance || 0} CES`);
    console.log(`   - –û–±—â–∏–π –±–∞–ª–∞–Ω—Å –≤ –ë–î: ${(updatedUser.cesBalance || 0) + (updatedUser.escrowCESBalance || 0)} CES`);
    
    if (successfulCancellations === stuckTrades.length) {
      console.log(`\nüéâ –í–°–ï –°–î–ï–õ–ö–ò –£–°–ü–ï–®–ù–û –û–¢–ú–ï–ù–ï–ù–´!`);
      console.log(`üí∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ: ${totalReturned.toFixed(4)} CES`);
    } else {
      console.log(`\n‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•: ${successfulCancellations}/${stuckTrades.length} —Å–¥–µ–ª–æ–∫ –æ—Ç–º–µ–Ω–µ–Ω–æ`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\n‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  cancelStuckTrades().catch(console.error);
}

module.exports = { cancelStuckTrades };