/**
 * Notify Buyer About Escrow Script
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–µ–π–∫–µ—Ä—É –æ —Ç–æ–º, —á—Ç–æ CES —Ç–æ–∫–µ–Ω—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —ç—Å–∫—Ä–æ—É –∏ –≥–æ—Ç–æ–≤—ã –∫ –ø–æ–ª—É—á–µ–Ω–∏—é
 */

require('dotenv').config();
const mongoose = require('mongoose');
const { User, P2PTrade } = require('../src/database/models');
const { Markup } = require('telegraf');

const BUYER_CHAT_ID = '2131340103'; // Liveliness - –º–µ–π–∫–µ—Ä
const SELLER_CHAT_ID = '942851377'; // –ê–ª–µ–∫—Å–µ–π - —Ç–µ–π–∫–µ—Ä

async function notifyBuyerAboutEscrow() {
  try {
    console.log('üìß –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ú–ï–ô–ö–ï–†–ê –û–ë –≠–°–ö–†–û–£');
    console.log('================================');
    console.log(`üéØ –ú–µ–π–∫–µ—Ä (–ø–æ–∫—É–ø–∞—Ç–µ–ª—å): ${BUYER_CHAT_ID}`);
    console.log(`üéØ –¢–µ–π–∫–µ—Ä (–ø—Ä–æ–¥–∞–≤–µ—Ü): ${SELLER_CHAT_ID}`);
    console.log('');
    
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const buyer = await User.findOne({ chatId: BUYER_CHAT_ID });
    const seller = await User.findOne({ chatId: SELLER_CHAT_ID });
    
    if (!buyer || !seller) {
      console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –æ–¥–∏–Ω –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
      return;
    }
    
    console.log(`\nüë§ –ú–ï–ô–ö–ï–†: ${buyer.firstName} (${buyer.chatId})`);
    console.log(`üë§ –¢–ï–ô–ö–ï–†: ${seller.firstName} (${seller.chatId})`);
    
    // –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–¥–µ–ª–∫–∏ –º–µ–∂–¥—É –Ω–∏–º–∏
    const activeTrade = await P2PTrade.findOne({
      buyerId: buyer._id,
      sellerId: seller._id,
      status: { $in: ['escrow_locked', 'payment_pending'] }
    }).sort({ 'timeTracking.createdAt': -1 });
    
    if (!activeTrade) {
      console.log('‚ùå –ê–∫—Ç–∏–≤–Ω–∞—è —Å–¥–µ–ª–∫–∞ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    console.log(`\nü§ù –ù–ê–ô–î–ï–ù–ê –ê–ö–¢–ò–í–ù–ê–Ø –°–î–ï–õ–ö–ê: ${activeTrade._id}`);
    console.log(`   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${activeTrade.amount} CES`);
    console.log(`   - –°—É–º–º–∞: ${activeTrade.totalValue} ‚ÇΩ`);
    console.log(`   - –°—Ç–∞—Ç—É—Å: ${activeTrade.status}`);
    console.log(`   - –°–æ–∑–¥–∞–Ω–∞: ${activeTrade.timeTracking.createdAt.toLocaleString('ru-RU')}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–æ–¥–∞–≤—Ü–∞
    let sellerName = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    let sellerCard = '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    let sellerBank = '–ë–∞–Ω–∫ –Ω–µ —É–∫–∞–∑–∞–Ω';
    
    if (seller.p2pProfile && seller.p2pProfile.fullName) {
      sellerName = seller.p2pProfile.fullName;
    } else if (seller.firstName) {
      sellerName = seller.firstName;
      if (seller.lastName) {
        sellerName += ` ${seller.lastName}`;
      }
    }
    
    if (seller.p2pProfile && seller.p2pProfile.paymentMethods) {
      const activeMethod = seller.p2pProfile.paymentMethods.find(pm => pm.isActive);
      if (activeMethod) {
        sellerCard = activeMethod.cardNumber || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
        
        const bankNames = {
          'sberbank': '–°–±–µ—Ä–±–∞–Ω–∫',
          'vtb': '–í–¢–ë',
          'gazprombank': '–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫',
          'alfabank': '–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫',
          'rshb': '–†–æ—Å—Å–µ–ª—å—Ö–æ–∑–±–∞–Ω–∫',
          'mkb': '–ú–ö–ë',
          'sovcombank': '–°–æ–≤–∫–æ–º–±–∞–Ω–∫',
          'tbank': '–¢-–ë–∞–Ω–∫',
          'domrf': '–î–û–ú.–†–§',
          'otkritie': '–û—Ç–∫—Ä—ã—Ç–∏–µ',
          'raiffeisenbank': '–†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω–±–∞–Ω–∫',
          'rosbank': '–†–æ—Å–±–∞–Ω–∫'
        };
        
        sellerBank = bankNames[activeMethod.bank] || activeMethod.bank;
      }
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–º–µ—Ä –æ—Ä–¥–µ—Ä–∞
    const orderNumber = `CES${Date.now().toString().slice(-8)}`;
    const currentTime = new Date().toLocaleString('ru-RU', {
      timeZone: 'Europe/Moscow',
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit'
    });
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è (30 –º–∏–Ω—É—Ç –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
    const expiryTime = new Date(Date.now() + 30 * 60 * 1000);
    const expiryTimeStr = expiryTime.toLocaleTimeString('ru-RU', {
      timeZone: 'Europe/Moscow',
      hour: '2-digit',
      minute: '2-digit'
    });
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–µ–π–∫–µ—Ä–∞
    const buyerMessage = `üí≥ –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –û–ë –û–ü–õ–ê–¢–ï\n` +
                        `‚Å†‚Å†‚Å†‚Å†‚Å†‚Å†‚Å†‚Å†‚Å†‚Å†\n` +
                        `üîî –ü—Ä–æ–¥–∞–≤–µ—Ü –ø–µ—Ä–µ–¥–∞–ª –≤–∞–º ${activeTrade.amount} CES –≤ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —ç—Å–∫—Ä–æ—É!\n\n` +
                        `üìã –î–ï–¢–ê–õ–ò –°–î–ï–õ–ö–ò:\n` +
                        `–û—Ä–¥–µ—Ä: ${orderNumber}\n` +
                        `–í—Ä–µ–º—è: ${currentTime}\n` +
                        `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${activeTrade.amount} CES\n` +
                        `–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: ${activeTrade.totalValue.toFixed(2)} ‚ÇΩ\n` +
                        `–í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É: 30 –º–∏–Ω. (–¥–æ ${expiryTimeStr})\n\n` +
                        `üí∞ –î–ê–ù–ù–´–ï –î–õ–Ø –û–ü–õ–ê–¢–´:\n` +
                        `–ë–∞–Ω–∫: ${sellerBank}\n` +
                        `–ö–∞—Ä—Ç–∞: ${sellerCard}\n` +
                        `–ü–æ–ª—É—á–∞—Ç–µ–ª—å: ${sellerName}\n\n` +
                        `‚ö†Ô∏è –í–ê–ñ–ù–û:\n` +
                        `‚Ä¢ –û–ø–ª–∞—Ç–∏—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É: ${activeTrade.totalValue.toFixed(2)} ‚ÇΩ\n` +
                        `‚Ä¢ –ù–µ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ CES –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏\n` +
                        `‚Ä¢ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ "–ü–ª–∞—Ç—ë–∂ –≤—ã–ø–æ–ª–Ω–µ–Ω"\n` +
                        `‚Ä¢ CES –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è`;

    const buyerKeyboard = Markup.inlineKeyboard([
      [Markup.button.callback('‚úÖ –ü–ª–∞—Ç—ë–∂ –≤—ã–ø–æ–ª–Ω–µ–Ω', 'payment_completed')],
      [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É', 'cancel_payment')],
      [Markup.button.callback('üîô –ö P2P –º–µ–Ω—é', 'p2p_menu')]
    ]);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–π–∫–µ—Ä—É
    console.log(`\nüì§ –û–¢–ü–†–ê–í–õ–Ø–Æ –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ú–ï–ô–ö–ï–†–£...`);
    
    try {
      const botInstance = require('../src/bot/telegramBot');
      const bot = botInstance.getInstance();
      
      await bot.telegram.sendMessage(buyer.chatId, buyerMessage, {
        reply_markup: buyerKeyboard.reply_markup,
        parse_mode: 'HTML'
      });
      
      console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–π–∫–µ—Ä—É ${buyer.chatId}`);
      
      // –¢–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–µ–π–∫–µ—Ä—É –æ —Ç–æ–º, —á—Ç–æ –º–µ–π–∫–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω
      const sellerNotification = `üîî –ú–ï–ô–ö–ï–† –£–í–ï–î–û–ú–õ–ï–ù\n\n` +
                                 `–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –≤–∞—à–∏ ${activeTrade.amount} CES –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —ç—Å–∫—Ä–æ—É.\n\n` +
                                 `üí∞ –û–Ω –¥–æ–ª–∂–µ–Ω –æ–ø–ª–∞—Ç–∏—Ç—å ${activeTrade.totalValue.toFixed(2)} ‚ÇΩ\n` +
                                 `‚è∞ –í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É: 30 –º–∏–Ω—É—Ç\n\n` +
                                 `–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —ç—Ç–æ –Ω–∞–∂–∞–≤ "–ü–ª–∞—Ç—ë–∂ –ø–æ–ª—É—á–µ–Ω".`;
      
      const sellerKeyboard = Markup.inlineKeyboard([
        [Markup.button.callback('‚úÖ –ü–ª–∞—Ç—ë–∂ –ø–æ–ª—É—á–µ–Ω', 'payment_received')],
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É', 'cancel_payment')],
        [Markup.button.callback('üîô –ö P2P –º–µ–Ω—é', 'p2p_menu')]
      ]);
      
      await bot.telegram.sendMessage(seller.chatId, sellerNotification, {
        reply_markup: sellerKeyboard.reply_markup,
        parse_mode: 'HTML'
      });
      
      console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–µ–π–∫–µ—Ä—É ${seller.chatId}`);
      
    } catch (sendError) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${sendError.message}`);
    }
    
    console.log(`\nüéâ –û–ü–ï–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!`);
    console.log(`üìß –ú–µ–π–∫–µ—Ä —Ç–µ–ø–µ—Ä—å –∑–Ω–∞–µ—Ç, —á—Ç–æ CES —Ç–æ–∫–µ–Ω—ã –≤ —ç—Å–∫—Ä–æ—É`);
    console.log(`üí∞ –û–Ω –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–ª–∞—Ç—É –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–¥–µ–ª–∫—É`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\n‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  notifyBuyerAboutEscrow().catch(console.error);
}

module.exports = { notifyBuyerAboutEscrow };