/**
 * Complete User Analysis Script
 * Analyzes all users in the system to understand the balance display issue
 */

const mongoose = require('mongoose');
const config = require('../src/config/configuration');
const { User } = require('../src/database/models');

async function analyzeAllUsers() {
  console.log('üîç –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –í–°–ï–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô');
  console.log('=' .repeat(50));
  
  try {
    await mongoose.connect(config.database.mongoUri, config.database.options);
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
    
    // Get all users
    const allUsers = await User.find({}).sort({ subscribedAt: -1 });
    console.log(`\nüìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: ${allUsers.length}`);
    
    // Categorize users
    const realUsers = allUsers.filter(user => !user.chatId.startsWith('test_'));
    const testUsers = allUsers.filter(user => user.chatId.startsWith('test_'));
    
    const realUsersWithWallets = realUsers.filter(user => user.walletAddress);
    const realUsersWithoutWallets = realUsers.filter(user => !user.walletAddress);
    
    console.log(`\nüë• –ö–ê–¢–ï–ì–û–†–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:`);
    console.log(`   –†–µ–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${realUsers.length}`);
    console.log(`   - –° –∫–æ—à–µ–ª—å–∫–∞–º–∏: ${realUsersWithWallets.length}`);
    console.log(`   - –ë–µ–∑ –∫–æ—à–µ–ª—å–∫–æ–≤: ${realUsersWithoutWallets.length}`);
    console.log(`   –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${testUsers.length}`);
    
    // Check recent activity
    const now = new Date();
    const yesterday = new Date(now.getTime() - 24 * 60 * 60 * 1000);
    const lastWeek = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
    
    const recentlyActive = realUsers.filter(user => 
      user.lastBalanceUpdate && new Date(user.lastBalanceUpdate) > yesterday
    );
    
    const activeThisWeek = realUsers.filter(user => 
      user.lastBalanceUpdate && new Date(user.lastBalanceUpdate) > lastWeek
    );
    
    console.log(`\nüìÖ –ê–ö–¢–ò–í–ù–û–°–¢–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:`);
    console.log(`   –ê–∫—Ç–∏–≤–Ω—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: ${recentlyActive.length}`);
    console.log(`   –ê–∫—Ç–∏–≤–Ω—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é: ${activeThisWeek.length}`);
    
    // Detailed analysis of real users with wallets
    if (realUsersWithWallets.length > 0) {
      console.log(`\nüîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –° –ö–û–®–ï–õ–¨–ö–ê–ú–ò:`);
      console.log('-'.repeat(80));
      
      for (const user of realUsersWithWallets) {
        const lastUpdate = user.lastBalanceUpdate ? 
          new Date(user.lastBalanceUpdate).toLocaleString('ru-RU') : '–ù–∏–∫–æ–≥–¥–∞';
        
        const hoursAgo = user.lastBalanceUpdate ? 
          Math.floor((now - new Date(user.lastBalanceUpdate)) / (1000 * 60 * 60)) : 'N/A';
        
        console.log(`\nüë§ ${user.chatId} (${user.firstName || user.username || '–ë–µ–∑ –∏–º–µ–Ω–∏'}):`);
        console.log(`   üìß Telegram: @${user.username || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`   üè† –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞: ${user.walletAddress}`);
        console.log(`   üí∞ –ë–∞–ª–∞–Ω—Å CES: ${user.cesBalance || 0}`);
        console.log(`   üíé –ë–∞–ª–∞–Ω—Å POL: ${user.polBalance || 0}`);
        console.log(`   üîí –≠—Å–∫—Ä–æ—É CES: ${user.escrowCESBalance || 0}`);
        console.log(`   üîí –≠—Å–∫—Ä–æ—É POL: ${user.escrowPOLBalance || 0}`);
        console.log(`   üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${lastUpdate} (${hoursAgo} —á. –Ω–∞–∑–∞–¥)`);
        console.log(`   ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω: ${user.isActive ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`   üìà P2P —Ä–µ–π—Ç–∏–Ω–≥: ${user.p2pRating || 5.0}`);
        console.log(`   ü§ù –£—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: ${user.successfulTrades || 0}`);
      }
    }
    
    // Check for users who might have balance issues
    console.log(`\n‚ö†Ô∏è –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:`);
    
    const usersWithOldUpdates = realUsersWithWallets.filter(user => {
      if (!user.lastBalanceUpdate) return true;
      const hoursSinceUpdate = (now - new Date(user.lastBalanceUpdate)) / (1000 * 60 * 60);
      return hoursSinceUpdate > 24;
    });
    
    if (usersWithOldUpdates.length > 0) {
      console.log(`   üïê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —É—Å—Ç–∞—Ä–µ–≤—à–∏–º–∏ –±–∞–ª–∞–Ω—Å–∞–º–∏ (>24—á): ${usersWithOldUpdates.length}`);
      for (const user of usersWithOldUpdates) {
        const hoursAgo = user.lastBalanceUpdate ? 
          Math.floor((now - new Date(user.lastBalanceUpdate)) / (1000 * 60 * 60)) : '–ù–∏–∫–æ–≥–¥–∞';
        console.log(`     - ${user.chatId}: ${hoursAgo} —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥`);
      }
    } else {
      console.log(`   ‚úÖ –í—Å–µ –±–∞–ª–∞–Ω—Å—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã`);
    }
    
    // Check for DB vs Blockchain discrepancies would require blockchain calls
    console.log(`\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:`);
    
    if (realUsersWithWallets.length === 0) {
      console.log(`   ‚ö†Ô∏è –í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∫–æ—à–µ–ª—å–∫–∞–º–∏`);
      console.log(`   üí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏`);
    } else if (usersWithOldUpdates.length > 0) {
      console.log(`   üîÑ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å—ã –¥–ª—è ${usersWithOldUpdates.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
      console.log(`   üí° –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–≤`);
    } else {
      console.log(`   ‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);
      console.log(`   üí° –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∂–∞–ª—É—é—Ç—Å—è –Ω–∞ –Ω—É–ª–µ–≤—ã–µ –±–∞–ª–∞–Ω—Å—ã, –≤–æ–∑–º–æ–∂–Ω–æ:`);
      console.log(`      - –û–Ω–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ –≤—Å–µ —Å—Ä–µ–¥—Å—Ç–≤–∞`);
      console.log(`      - –°—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö P2P —Å–¥–µ–ª–∫–∞—Ö`);
      console.log(`      - –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await mongoose.connection.close();
    console.log('\nüìù –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω');
  }
}

analyzeAllUsers().catch(console.error);