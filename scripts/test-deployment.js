/**
 * Test Deployment Script
 * –°–∏–º—É–ª–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
 */

require('dotenv').config();
const { ethers } = require('ethers');

async function testDeployment() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è');
  console.log('=====================================\n');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    const cesTokenAddress = process.env.CES_TOKEN_ADDRESS;
    const polygonRpcUrl = process.env.POLYGON_RPC_URL;
    const adminPrivateKey = process.env.ADMIN_PRIVATE_KEY;

    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
    console.log('-------------------------');
    console.log(`CES Token: ${cesTokenAddress}`);
    console.log(`Polygon RPC: ${polygonRpcUrl}`);
    console.log(`Admin Key: ${adminPrivateKey ? (adminPrivateKey.length === 64 ? '–ö–û–†–†–ï–ö–¢–ù–´–ô –§–û–†–ú–ê–¢' : `–ù–ï–í–ï–†–ù–ê–Ø –î–õ–ò–ù–ê (${adminPrivateKey.length}/64)`) : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`);

    if (!cesTokenAddress || !polygonRpcUrl) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏
    console.log('\nüîå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Polygon:');
    console.log('--------------------------------------');
    
    const provider = new ethers.JsonRpcProvider(polygonRpcUrl);
    const network = await provider.getNetwork();
    console.log(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ç–∏: ${network.name} (ID: ${network.chainId})`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫
    const blockNumber = await provider.getBlockNumber();
    console.log(`üì¶ –¢–µ–∫—É—â–∏–π –±–ª–æ–∫: ${blockNumber}`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º CES –∫–æ–Ω—Ç—Ä–∞–∫—Ç
    console.log('\nü™ô –ü—Ä–æ–≤–µ—Ä–∫–∞ CES —Ç–æ–∫–µ–Ω–∞:');
    console.log('-----------------------');
    
    const erc20Abi = [
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function decimals() view returns (uint8)",
      "function totalSupply() view returns (uint256)"
    ];

    try {
      const cesContract = new ethers.Contract(cesTokenAddress, erc20Abi, provider);
      const [name, symbol, decimals, totalSupply] = await Promise.all([
        cesContract.name(),
        cesContract.symbol(),
        cesContract.decimals(),
        cesContract.totalSupply()
      ]);

      console.log(`‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: ${name}`);
      console.log(`‚úÖ –°–∏–º–≤–æ–ª: ${symbol}`);
      console.log(`‚úÖ –î–µ—Å—è—Ç–∏—á–Ω—ã–µ –∑–Ω–∞–∫–∏: ${decimals}`);
      console.log(`‚úÖ –û–±—â–∏–π –æ–±—ä–µ–º: ${ethers.formatEther(totalSupply)} ${symbol}`);
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ CES –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É: ${error.message}`);
    }

    // –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
    console.log('\nüöÄ –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:');
    console.log('---------------------------');

    if (adminPrivateKey && adminPrivateKey !== 'your_admin_private_key_here' && adminPrivateKey.length === 64) {
      console.log('‚úÖ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω - –º–æ–∂–Ω–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞—Ç—å');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –∞–¥–º–∏–Ω–∞
      try {
        const wallet = new ethers.Wallet(adminPrivateKey, provider);
        const balance = await provider.getBalance(wallet.address);
        
        console.log(`üë§ –ê–¥—Ä–µ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${wallet.address}`);
        console.log(`üí∞ –ë–∞–ª–∞–Ω—Å MATIC: ${ethers.formatEther(balance)}`);
        
        if (balance < ethers.parseEther('0.1')) {
          console.log('‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ MATIC –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è (–Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 0.1)');
        } else {
          console.log('‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ MATIC –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è');
        }
      } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—à–µ–ª—å–∫–∞: ${error.message}`);
      }
    } else {
      console.log('‚ùå –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç');
      console.log('\nüìã –î–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:');
      console.log('1. –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∏–∑ MetaMask');
      console.log('2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ .env —Ñ–∞–π–ª (–±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ 0x)');
      console.log('3. –ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ—à–µ–ª–µ–∫ MATIC —Ç–æ–∫–µ–Ω–∞–º–∏');
      console.log('4. –ó–∞–ø—É—Å—Ç–∏—Ç—å: npm run deploy:polygon');
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –ø–æ—Å–ª–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
    console.log('\nüéØ –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:');
    console.log('----------------------------------');
    console.log('‚úÖ –°–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç –±—É–¥–µ—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –≤ Polygon');
    console.log('‚úÖ –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–∏—Ç—Å—è –≤ .env');
    console.log('‚úÖ USE_SMART_CONTRACT_ESCROW —Å—Ç–∞–Ω–µ—Ç true');
    console.log('‚úÖ P2P —Ç–æ—Ä–≥–æ–≤–ª—è –ø–æ–ª—É—á–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å');
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ —Å–º–æ–≥—É—Ç –æ–±–º–∞–Ω—ã–≤–∞—Ç—å —ç—Å–∫—Ä–æ—É');

    // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ –∏ –ø–æ—Å–ª–µ
    console.log('\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:');
    console.log('---------------------------');
    console.log('‚ùå –î–û —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:');
    console.log('   - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —ç—Å–∫—Ä–æ—É (–Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ)');
    console.log('   - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±–º–∞–Ω–∞ —á–µ—Ä–µ–∑ MetaMask');
    console.log('   - –†–∏—Å–∫ –ø–æ—Ç–µ—Ä–∏ —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º–∏');
    
    console.log('\n‚úÖ –ü–û–°–õ–ï —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:');
    console.log('   - –°–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç —ç—Å–∫—Ä–æ—É (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)');
    console.log('   - –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±–º–∞–Ω–∞ –¥–∞–∂–µ —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –∫–ª—é—á–æ–º');
    console.log('   - –ù—É–ª–µ–≤–æ–π —Ä–∏—Å–∫ –ø–æ—Ç–µ—Ä–∏ —Å—Ä–µ–¥—Å—Ç–≤');

    console.log('\n‚úÖ –¢–µ—Å—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
function demonstrateDeploymentProcess() {
  console.log('\nüé≠ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–û–¶–ï–°–°–ê –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø:');
  console.log('======================================');
  
  console.log('\nüìù –®–∞–≥–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:');
  console.log('1. üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –≤ .env');
  console.log('2. üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ MATIC —Ç–æ–∫–µ–Ω–∞–º–∏');
  console.log('3. üöÄ –ó–∞–ø—É—Å–∫: npm run deploy:polygon');
  console.log('4. ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ –±–ª–æ–∫—á–µ–π–Ω–µ');
  console.log('5. ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
  
  console.log('\nüîê –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:');
  console.log('üìã –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞: 0x1234...abcd');
  console.log('üîó –•–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: 0x5678...efgh');
  console.log('üëë –í–ª–∞–¥–µ–ª–µ—Ü: –≤–∞—à –∞–¥—Ä–µ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
  console.log('‚õΩ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –≥–∞–∑–∞: ~0.05 MATIC');
  
  console.log('\nüõ°Ô∏è –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:');
  console.log('‚úÖ –§–∏–∑–∏—á–µ—Å–∫–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤');
  console.log('‚úÖ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±–æ–π—Ç–∏ —ç—Å–∫—Ä–æ—É');
  console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Å–ø–æ—Ä–æ–≤');
  console.log('‚úÖ –í–æ–∑–≤—Ä–∞—Ç –ø–æ —Ç–∞–π–º–∞—É—Ç—É');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testDeployment()
    .then(() => {
      demonstrateDeploymentProcess();
      console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
      process.exit(0);
    })
    .catch(error => {
      console.error('\nüí• –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª:', error);
      process.exit(1);
    });
}

module.exports = { testDeployment };