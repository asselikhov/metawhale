/**
 * Manual Token Return Script
 * –†—É—á–Ω–æ–π –≤–æ–∑–≤—Ä–∞—Ç CES —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–æ—à–µ–ª—å–∫–æ–º 0x1A1432d6D4eFe75651f2c39DC1Ec6a5D936f401d
 */

require('dotenv').config();
const mongoose = require('mongoose');
const { User, P2PTrade, P2POrder, EscrowTransaction } = require('../src/database/models');
const walletService = require('../src/services/walletService');
const escrowService = require('../src/services/escrowService');

const TARGET_WALLET = '0x1A1432d6D4eFe75651f2c39DC1Ec6a5D936f401d';

async function manualTokenReturn() {
  try {
    console.log('üîß –†–£–ß–ù–û–ô –í–û–ó–í–†–ê–¢ CES –¢–û–ö–ï–ù–û–í');
    console.log('================================');
    console.log(`üéØ –ö–æ—à–µ–ª–µ–∫: ${TARGET_WALLET}`);
    console.log('');
    
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∞–¥—Ä–µ—Å—É –∫–æ—à–µ–ª—å–∫–∞
    const user = await User.findOne({ walletAddress: TARGET_WALLET });
    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞');
      return;
    }
    
    console.log(`\nüë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨:`);
    console.log(`   - Chat ID: ${user.chatId}`);
    console.log(`   - –ò–º—è: ${user.firstName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} ${user.lastName || ''}`);
    console.log(`   - Username: ${user.username || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
    console.log(`   - –ö–æ—à–µ–ª–µ–∫: ${user.walletAddress}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –±–∞–ª–∞–Ω—Å–æ–≤
    console.log(`\nüí∞ –¢–ï–ö–£–©–ò–ï –ë–ê–õ–ê–ù–°–´:`);
    const realCESBalance = await walletService.getCESBalance(user.walletAddress);
    console.log(`   - –†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å CES (–±–ª–æ–∫—á–µ–π–Ω): ${realCESBalance.toFixed(4)} CES`);
    console.log(`   - –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å CES –≤ –ë–î: ${user.cesBalance || 0} CES`);
    console.log(`   - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –≤ —ç—Å–∫—Ä–æ—É: ${user.escrowCESBalance || 0} CES`);
    console.log(`   - –û–±—â–∏–π –≤ –ë–î: ${(user.cesBalance || 0) + (user.escrowCESBalance || 0)} CES`);
    
    const balanceDiscrepancy = realCESBalance - ((user.cesBalance || 0) + (user.escrowCESBalance || 0));
    console.log(`   - –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: ${balanceDiscrepancy.toFixed(4)} CES`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤ –∏ —Å–¥–µ–ª–æ–∫
    console.log(`\nüîç –ê–ù–ê–õ–ò–ó –ê–ö–¢–ò–í–ù–´–• –û–ü–ï–†–ê–¶–ò–ô:`);
    
    // –ê–∫—Ç–∏–≤–Ω—ã–µ –æ—Ä–¥–µ—Ä–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É
    const activeSellOrders = await P2POrder.find({
      userId: user._id,
      type: 'sell',
      status: { $in: ['active', 'partial'] },
      escrowLocked: true,
      escrowAmount: { $gt: 0 }
    });
    
    console.log(`   - –ê–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É —Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —ç—Å–∫—Ä–æ—É: ${activeSellOrders.length}`);
    let totalOrderEscrow = 0;
    activeSellOrders.forEach((order, index) => {
      console.log(`     ${index + 1}. –û—Ä–¥–µ—Ä ${order._id}: ${order.escrowAmount} CES –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ`);
      totalOrderEscrow += order.escrowAmount;
    });
    
    // –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏ –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø—Ä–æ–¥–∞–≤–µ—Ü
    const activeTrades = await P2PTrade.find({
      sellerId: user._id,
      status: { $in: ['escrow_locked', 'payment_pending', 'payment_made', 'payment_confirmed'] }
    });
    
    console.log(`   - –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø—Ä–æ–¥–∞–≤–µ—Ü): ${activeTrades.length}`);
    let totalTradeEscrow = 0;
    activeTrades.forEach((trade, index) => {
      console.log(`     ${index + 1}. –°–¥–µ–ª–∫–∞ ${trade._id}: ${trade.amount} CES (—Å—Ç–∞—Ç—É—Å: ${trade.status})`);
      totalTradeEscrow += trade.amount;
    });
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —ç—Å–∫—Ä–æ—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    console.log(`\nüìã –ò–°–¢–û–†–ò–Ø –≠–°–ö–†–û–£ –¢–†–ê–ù–ó–ê–ö–¶–ò–ô (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10):`);
    const escrowHistory = await EscrowTransaction.find({
      userId: user._id,
      tokenType: 'CES'
    }).sort({ createdAt: -1 }).limit(10);
    
    let totalLocked = 0;
    let totalReleased = 0;
    let totalRefunded = 0;
    
    escrowHistory.forEach((tx, index) => {
      const date = tx.createdAt.toLocaleString('ru-RU');
      console.log(`     ${index + 1}. ${tx.type.toUpperCase()}: ${tx.amount} CES (${tx.status}) - ${date}`);
      console.log(`        –ü—Ä–∏—á–∏–Ω–∞: ${tx.reason || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
      
      if (tx.type === 'lock' && tx.status === 'completed') {
        totalLocked += tx.amount;
      } else if (tx.type === 'release' && tx.status === 'completed') {
        totalReleased += tx.amount;
      } else if (tx.type === 'refund' && tx.status === 'completed') {
        totalRefunded += tx.amount;
      }
    });
    
    console.log(`\nüìä –°–í–û–î–ö–ê –ü–û –≠–°–ö–†–û–£ –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø–ú:`);
    console.log(`   - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ (lock): ${totalLocked.toFixed(4)} CES`);
    console.log(`   - –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ (release): ${totalReleased.toFixed(4)} CES`);
    console.log(`   - –í–æ–∑–≤—Ä–∞—â–µ–Ω–æ (refund): ${totalRefunded.toFixed(4)} CES`);
    console.log(`   - –ë–∞–ª–∞–Ω—Å —ç—Å–∫—Ä–æ—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${(totalLocked - totalReleased - totalRefunded).toFixed(4)} CES`);
    
    // –†–∞—Å—á–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–æ–≤
    const expectedEscrowBalance = totalOrderEscrow + totalTradeEscrow;
    const expectedAvailableBalance = Math.max(0, realCESBalance - expectedEscrowBalance);
    
    console.log(`\nüßÆ –†–ê–°–ß–ï–¢ –ü–†–ê–í–ò–õ–¨–ù–´–• –ë–ê–õ–ê–ù–°–û–í:`);
    console.log(`   - –†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –≤ –±–ª–æ–∫—á–µ–π–Ω–µ: ${realCESBalance.toFixed(4)} CES`);
    console.log(`   - –¢—Ä–µ–±—É–µ—Ç—Å—è –≤ —ç—Å–∫—Ä–æ—É (–æ—Ä–¥–µ—Ä–∞ + —Å–¥–µ–ª–∫–∏): ${expectedEscrowBalance.toFixed(4)} CES`);
    console.log(`   - –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ: ${expectedAvailableBalance.toFixed(4)} CES`);
    console.log(`   - –¢–µ–∫—É—â–∏–π —ç—Å–∫—Ä–æ—É –≤ –ë–î: ${user.escrowCESBalance || 0} CES`);
    console.log(`   - –¢–µ–∫—É—â–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –≤ –ë–î: ${user.cesBalance || 0} CES`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    const escrowDifference = (user.escrowCESBalance || 0) - expectedEscrowBalance;
    const availableDifference = (user.cesBalance || 0) - expectedAvailableBalance;
    
    console.log(`\n‚öñÔ∏è –ê–ù–ê–õ–ò–ó –†–ê–°–•–û–ñ–î–ï–ù–ò–ô:`);
    console.log(`   - –ò–∑–±—ã—Ç–æ–∫ –≤ —ç—Å–∫—Ä–æ—É: ${escrowDifference.toFixed(4)} CES`);
    console.log(`   - –ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –≤ –¥–æ—Å—Ç—É–ø–Ω–æ–º: ${(-availableDifference).toFixed(4)} CES`);
    
    if (Math.abs(escrowDifference) > 0.0001 || Math.abs(availableDifference) > 0.0001) {
      console.log(`\nüîß –¢–†–ï–ë–£–ï–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ë–ê–õ–ê–ù–°–û–í!`);
      console.log(`\n‚ùì –í—ã–ø–æ–ª–Ω–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ? (y/N)`);
      
      // –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏:
      // console.log(`\nüîÑ –í–´–ü–û–õ–ù–Ø–Æ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï...`);
      // await fixUserBalances(user, expectedAvailableBalance, expectedEscrowBalance);
      
      console.log(`\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.`);
      console.log(`–†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Å–∫—Ä–∏–ø—Ç–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.`);
      
    } else {
      console.log(`\n‚úÖ –ë–∞–ª–∞–Ω—Å—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\n‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function fixUserBalances(user, correctAvailableBalance, correctEscrowBalance) {
  try {
    console.log(`\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ë–ê–õ–ê–ù–°–û–í –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ${user.chatId}:`);
    
    const oldAvailable = user.cesBalance || 0;
    const oldEscrow = user.escrowCESBalance || 0;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å—ã
    user.cesBalance = correctAvailableBalance;
    user.escrowCESBalance = correctEscrowBalance;
    user.lastBalanceUpdate = new Date();
    
    await user.save();
    
    console.log(`   - –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${oldAvailable.toFixed(4)} ‚Üí ${correctAvailableBalance.toFixed(4)} CES`);
    console.log(`   - –≠—Å–∫—Ä–æ—É –±–∞–ª–∞–Ω—Å: ${oldEscrow.toFixed(4)} ‚Üí ${correctEscrowBalance.toFixed(4)} CES`);
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–µ
    const correctionTx = new EscrowTransaction({
      userId: user._id,
      tradeId: null,
      type: 'refund',
      tokenType: 'CES',
      amount: correctAvailableBalance - oldAvailable,
      status: 'completed',
      reason: `–†—É—á–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –±–∞–ª–∞–Ω—Å–∞: –≤–æ–∑–≤—Ä–∞—Ç ${(correctAvailableBalance - oldAvailable).toFixed(4)} CES –∏–∑ –∑–∞—Å—Ç—Ä—è–≤—à–µ–≥–æ —ç—Å–∫—Ä–æ—É`,
      completedAt: new Date()
    });
    
    if (Math.abs(correctionTx.amount) > 0.0001) {
      await correctionTx.save();
      console.log(`   - –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å –æ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–µ: ${correctionTx.amount.toFixed(4)} CES`);
    }
    
    console.log(`‚úÖ –ë–∞–ª–∞–Ω—Å—ã —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–æ–≤:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  manualTokenReturn().catch(console.error);
}

module.exports = { manualTokenReturn, fixUserBalances };