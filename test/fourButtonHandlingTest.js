/**
 * Comprehensive test for handling 4 main menu buttons
 * Verifies that clicking on each button triggers the correct response
 */

// Mock Telegram context for testing
const mockCtx = {
  chat: {
    id: 'test_user_menu',
    username: 'testuser'
  },
  message: {
    text: ''
  },
  reply: async (message) => {
    console.log(`ü§ñ –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç: ${message}`);
    return { message_id: 1001 };
  }
};

// Mock handlers
const mockHandlers = {
  walletHandler: {
    handlePersonalCabinetText: async (ctx) => {
      console.log('üè† –í—ã–∑–æ–≤ handlePersonalCabinetText –≤ WalletHandler');
      return await ctx.reply('üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç');
    }
  },
  p2pHandler: {
    handleP2PMenu: async (ctx) => {
      console.log('üîÑ –í—ã–∑–æ–≤ handleP2PMenu –≤ P2PHandler');
      return await ctx.reply('üîÑ P2P –ë–∏—Ä–∂–∞');
    }
  }
};

// Function to test text message handling
async function testTextMessageHandling(text) {
  console.log(`\n--- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞: "${text}" ---`);
  mockCtx.message.text = text;
  
  // –ò–º–∏—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ BaseCommandHandler
  if (text.includes('–õ–ö') || text.includes('–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç') || text.includes('üë§') || 
      text.includes('Personal Cabinet') || text.includes('PC')) {
    console.log('‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"');
    return await mockHandlers.walletHandler.handlePersonalCabinetText(mockCtx);
  }
  
  if (text.includes('P2P –ë–∏—Ä–∂–∞') || text.includes('üîÑ P2P') || text.includes('P2P')) {
    console.log('‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ "üîÑ P2P –ë–∏—Ä–∂–∞"');
    return await mockHandlers.p2pHandler.handleP2PMenu(mockCtx);
  }
  
  if (text.includes('Matrix CES') || text.includes('üí† Matrix') || text.includes('Matrix')) {
    console.log('‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ "üí† Matrix"');
    return await mockCtx.reply('‚ö†Ô∏è –≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n\nüîî –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ ‚Äî –∑–∞–ø—É—Å–∫ —É–∂–µ —Å–∫–æ—Ä–æ!');
  }
  
  if (text.includes('‚öôÔ∏è') || text.includes('–ù–∞—Å—Ç—Ä–æ–π–∫–∏') || text.includes('Settings')) {
    console.log('‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"');
    // Mock settings menu response
    return await mockCtx.reply('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
  }
  
  console.log('‚ùå –¢–µ–∫—Å—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω –∫–∞–∫ –∫–Ω–æ–ø–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é');
  return await mockCtx.reply('üòï –ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.');
}

async function runButtonHandlingTest() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ 4 –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é...\n');
  
  // Test 1: Personal Cabinet button
  console.log('–¢–µ—Å—Ç 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"');
  await testTextMessageHandling('üë§ –õ–ö');
  
  // Test 2: P2P button
  console.log('\n–¢–µ—Å—Ç 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üîÑ P2P"');
  await testTextMessageHandling('üîÑ P2P');
  
  // Test 3: Matrix button
  console.log('\n–¢–µ—Å—Ç 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üí† Matrix"');
  await testTextMessageHandling('üí† Matrix');
  
  // Test 4: Settings button
  console.log('\n–¢–µ—Å—Ç 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"');
  await testTextMessageHandling('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
  
  // Test 5: Alternative text for Personal Cabinet
  console.log('\n–¢–µ—Å—Ç 5: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"');
  await testTextMessageHandling('–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç');
  
  // Test 6: Alternative text for P2P
  console.log('\n–¢–µ—Å—Ç 6: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ "P2P"');
  await testTextMessageHandling('P2P');
  
  // Test 7: Unknown text
  console.log('\n–¢–µ—Å—Ç 7: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞');
  await testTextMessageHandling('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞');
  
  console.log('\n‚úÖ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∑–∞–≤–µ—Ä—à–µ–Ω');
}

// Main test function
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ 4 –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é...\n');
  
  console.log('–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:');
  console.log('- –ö–Ω–æ–ø–∫–∞ "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç" –¥–æ–ª–∂–Ω–∞ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  console.log('- –ö–Ω–æ–ø–∫–∞ "üîÑ P2P –ë–∏—Ä–∂–∞" –¥–æ–ª–∂–Ω–∞ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –º–µ–Ω—é P2P —Ç–æ—Ä–≥–æ–≤–ª–∏');
  console.log('- –ö–Ω–æ–ø–∫–∞ "üí† Matrix" –¥–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
  console.log('- –ö–Ω–æ–ø–∫–∞ "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏" –¥–æ–ª–∂–Ω–∞ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫');
  console.log('- –î—Ä—É–≥–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –∫–∞–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã\n');
  
  try {
    await runButtonHandlingTest();
    
    console.log(`\n${'='.repeat(60)}`);
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –û–±—Ä–∞–±–æ—Ç–∫–∞ 4 –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
    console.log('‚úÖ –í—Å–µ 4 –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    console.log('‚úÖ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ');
    console.log(`${'='.repeat(60)}`);
    
  } catch (error) {
    console.error('üí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', error);
  }
}

// Run the test
if (require.main === module) {
  main().then(() => {
    console.log('\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
  }).catch((error) => {
    console.error('üí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', error);
  });
}

module.exports = { testTextMessageHandling };