/**
 * –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤ –∏ –º–Ω–æ–≥–æ—Å–µ—Ç–µ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
 */

console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤...\n');

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ backgroundProcessingService
try {
  console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ backgroundProcessingService...');
  const backgroundService = require('../src/services/backgroundProcessingService');
  console.log('   ‚úÖ backgroundProcessingService –∑–∞–≥—Ä—É–∂–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–∞ processWalletData
  if (typeof backgroundService.processWalletData === 'function') {
    console.log('   ‚úÖ processWalletData –º–µ—Ç–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω');
  } else {
    console.log('   ‚ùå processWalletData –º–µ—Ç–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –≤ backgroundProcessingService:', error.message);
  process.exit(1);
}

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ multiChainWalletService
try {
  console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ multiChainWalletService...');
  const multiChainWalletService = require('../src/services/multiChainWalletService');
  console.log('   ‚úÖ multiChainWalletService –∑–∞–≥—Ä—É–∂–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤
  const requiredMethods = [
    'getMultiChainWalletInfo',
    'getNetworkBalances',
    'getPolygonTokenBalance',
    'getTronNativeBalance',
    'getEVMTokenBalance'
  ];
  
  for (const method of requiredMethods) {
    if (typeof multiChainWalletService[method] === 'function') {
      console.log(`   ‚úÖ ${method} –º–µ—Ç–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω`);
    } else {
      console.log(`   ‚ùå ${method} –º–µ—Ç–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  }
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –≤ multiChainWalletService:', error.message);
  process.exit(1);
}

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ priceService
try {
  console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ priceService...');
  const priceService = require('../src/services/priceService');
  console.log('   ‚úÖ priceService –∑–∞–≥—Ä—É–∂–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ POL –º–µ—Ç–æ–¥–∞
  if (typeof priceService.getPOLPrice === 'function') {
    console.log('   ‚úÖ getPOLPrice –º–µ—Ç–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω');
  } else {
    console.log('   ‚ùå getPOLPrice –º–µ—Ç–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –≤ priceService:', error.message);
  process.exit(1);
}

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ multiChainService
try {
  console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ multiChainService...');
  const multiChainService = require('../src/services/multiChainService');
  console.log('   ‚úÖ multiChainService –∑–∞–≥—Ä—É–∂–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ Arbitrum USDC –∞–¥—Ä–µ—Å–∞
  const arbitrumConfig = multiChainService.getNetworkConfig('arbitrum');
  if (arbitrumConfig && arbitrumConfig.tokens.USDC) {
    const usdcAddress = arbitrumConfig.tokens.USDC.address;
    console.log(`   üîç Arbitrum USDC –∞–¥—Ä–µ—Å: ${usdcAddress}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å
    if (usdcAddress === '0xaf88d065e77c8cC2239327C5EDb3A432268e5831') {
      console.log('   ‚úÖ Arbitrum USDC –∞–¥—Ä–µ—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
    } else {
      console.log('   ‚ùå Arbitrum USDC –∞–¥—Ä–µ—Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π');
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ç–µ–π
  const networks = multiChainService.getNetworks();
  console.log(`   üìã –î–æ—Å—Ç—É–ø–Ω–æ —Å–µ—Ç–µ–π: ${networks.length}`);
  console.log(`   üåê –°–µ—Ç–∏: ${networks.map(n => `${multiChainService.getNetworkEmoji(n.id)} ${n.name}`).join(', ')}`);
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –≤ multiChainService:', error.message);
  process.exit(1);
}

// 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ WalletHandler
try {
  console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WalletHandler...');
  const WalletHandler = require('../src/handlers/WalletHandler');
  const handler = new WalletHandler();
  console.log('   ‚úÖ WalletHandler –∑–∞–≥—Ä—É–∂–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤
  const requiredMethods = [
    'handlePersonalCabinetText',
    'handleCreateWallet',
    'handleSwitchNetwork',
    'handleNetworkSwitch'
  ];
  
  for (const method of requiredMethods) {
    if (typeof handler[method] === 'function') {
      console.log(`   ‚úÖ ${method} –º–µ—Ç–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω`);
    } else {
      console.log(`   ‚ùå ${method} –º–µ—Ç–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  }
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –≤ WalletHandler:', error.message);
  process.exit(1);
}

// 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ userNetworkService
try {
  console.log('\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ userNetworkService...');
  const userNetworkService = require('../src/services/userNetworkService');
  console.log('   ‚úÖ userNetworkService –∑–∞–≥—Ä—É–∂–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤
  const requiredMethods = [
    'getUserNetwork',
    'setUserNetwork',
    'canSwitchToNetwork',
    'getNetworkInfo'
  ];
  
  for (const method of requiredMethods) {
    if (typeof userNetworkService[method] === 'function') {
      console.log(`   ‚úÖ ${method} –º–µ—Ç–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω`);
    } else {
      console.log(`   ‚ùå ${method} –º–µ—Ç–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  }
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –≤ userNetworkService:', error.message);
  process.exit(1);
}

console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
console.log('\nüìã –†–µ–∑—é–º–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:');
console.log('   ‚úÖ backgroundProcessingService –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å multiChainWalletService');
console.log('   ‚úÖ WalletHandler.handleCreateWallet —É—á–∏—Ç—ã–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–µ—Ç—å');
console.log('   ‚úÖ Arbitrum USDC –∞–¥—Ä–µ—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –≤ multiChainService');
console.log('   ‚úÖ getPOLPrice –º–µ—Ç–æ–¥ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ priceService');
console.log('   ‚úÖ –í—Å–µ –º–Ω–æ–≥–æ—Å–µ—Ç–µ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');

console.log('\nüöÄ –ö–æ–¥ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º —Å –±–∞–ª–∞–Ω—Å–∞–º–∏!');
process.exit(0);