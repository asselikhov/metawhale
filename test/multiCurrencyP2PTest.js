/**
 * –¢–µ—Å—Ç –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–æ–π P2P —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
 * 
 * –≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç:
 * 1. FiatCurrencyService - —Ä–∞–±–æ—Ç—É —Å –≤–∞–ª—é—Ç–∞–º–∏ –∏ –∫—É—Ä—Å–∞–º–∏
 * 2. FiatReserveService - —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö
 * 3. P2PService - —Å–æ–∑–¥–∞–Ω–∏–µ –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤
 * 4. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤–∞–ª—é—Ç
 */

const mongoose = require('mongoose');
const { connectDatabase } = require('../src/database/models');
const fiatCurrencyService = require('../src/services/fiatCurrencyService');
const fiatReserveService = require('../src/services/fiatReserveService');

class MultiCurrencyP2PTest {
  constructor() {
    this.testResults = {
      passed: 0,
      failed: 0,
      errors: []
    };
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
   */
  async runAllTests() {
    try {
      console.log('üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í –ú–£–õ–¨–¢–ò–í–ê–õ–Æ–¢–ù–û–ô P2P –°–ò–°–¢–ï–ú–´');
      console.log('='.repeat(60));

      // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î (–≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ)
      process.env.NODE_ENV = 'test';
      
      // –≠—Ç–∞–ø 1: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FiatCurrencyService
      await this.testFiatCurrencyService();
      
      // –≠—Ç–∞–ø 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç
      await this.testCurrencyConversion();
      
      // –≠—Ç–∞–ø 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      await this.testCurrencyFormatting();
      
      // –≠—Ç–∞–ø 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FiatReserveService
      await this.testFiatReserveService();
      
      // –≠—Ç–∞–ø 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
      await this.testMultiCurrencyOperations();
      
      // –≠—Ç–∞–ø 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
      await this.testEdgeCases();
      
      // –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
      this.printTestReport();
      
    } catch (error) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      this.testResults.errors.push(`Critical: ${error.message}`);
    }
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FiatCurrencyService
   */
  async testFiatCurrencyService() {
    console.log('\nüìã –≠–¢–ê–ü 1: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FiatCurrencyService');
    
    // –¢–µ—Å—Ç 1.1: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–∞–ª—é—Ç—ã
    this.test('1.1 –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –≤–∞–ª—é—Ç', () => {
      const currencies = fiatCurrencyService.getSupportedCurrencies();
      if (currencies.length !== 10) {
        throw new Error(`–û–∂–∏–¥–∞–ª–æ—Å—å 10 –≤–∞–ª—é—Ç, –ø–æ–ª—É—á–µ–Ω–æ ${currencies.length}`);
      }
      
      const expectedCurrencies = ['USD', 'RUB', 'EUR', 'CNY', 'INR', 'NGN', 'VND', 'KRW', 'JPY', 'BRL'];
      const actualCodes = currencies.map(c => c.code);
      
      for (const expected of expectedCurrencies) {
        if (!actualCodes.includes(expected)) {
          throw new Error(`–í–∞–ª—é—Ç–∞ ${expected} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö`);
        }
      }
      
      console.log(`  ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è ${currencies.length} –≤–∞–ª—é—Ç: ${actualCodes.join(', ')}`);
    });

    // –¢–µ—Å—Ç 1.2: –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤–∞–ª—é—Ç
    this.test('1.2 –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤–∞–ª—é—Ç', () => {
      const rubMetadata = fiatCurrencyService.getCurrencyMetadata('RUB');
      
      if (rubMetadata.symbol !== '‚ÇΩ') {
        throw new Error(`–ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–º–≤–æ–ª –¥–ª—è RUB: ${rubMetadata.symbol}`);
      }
      
      if (rubMetadata.decimals !== 2) {
        throw new Error(`–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ –¥–ª—è RUB: ${rubMetadata.decimals}`);
      }
      
      if (rubMetadata.flag !== 'üá∑üá∫') {
        throw new Error(`–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–ª–∞–≥ –¥–ª—è RUB: ${rubMetadata.flag}`);
      }
      
      console.log(`  ‚úÖ RUB –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: ${rubMetadata.symbol} ${rubMetadata.flag} (${rubMetadata.decimals} –∑–Ω–∞–∫–æ–≤)`);
    });

    // –¢–µ—Å—Ç 1.3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤–∞–ª—é—Ç
    this.test('1.3 –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤–∞–ª—é—Ç', () => {
      if (!fiatCurrencyService.isCurrencySupported('USD')) {
        throw new Error('USD –¥–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è');
      }
      
      if (fiatCurrencyService.isCurrencySupported('INVALID')) {
        throw new Error('INVALID –Ω–µ –¥–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è');
      }
      
      if (!fiatCurrencyService.isCurrencySupported('rub')) { // lowercase
        throw new Error('–î–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è –Ω–µ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É –ø–æ–∏—Å–∫');
      }
      
      console.log('  ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤–∞–ª—é—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    });
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç
   */
  async testCurrencyConversion() {
    console.log('\nüí± –≠–¢–ê–ü 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç');

    // –¢–µ—Å—Ç 2.1: –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è
    await this.testAsync('2.1 –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è USD/RUB', async () => {
      // –°–Ω–∞—á–∞–ª–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—É—Ä—Å—ã (–º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å fallback)
      await fiatCurrencyService.updateAllExchangeRates();
      
      const rate = await fiatCurrencyService.getExchangeRate('USD', 'RUB');
      
      if (!rate || rate <= 0) {
        throw new Error(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫—É—Ä—Å USD/RUB: ${rate}`);
      }
      
      if (rate < 50 || rate > 200) {
        console.warn(`  ‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∫—É—Ä—Å USD/RUB: ${rate} (–≤–æ–∑–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback)`);
      }
      
      console.log(`  ‚úÖ –ö—É—Ä—Å USD/RUB: ${rate.toFixed(2)}`);
    });

    // –¢–µ—Å—Ç 2.2: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å—É–º–º—ã
    await this.testAsync('2.2 –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å—É–º–º—ã', async () => {
      const usdAmount = 100;
      const rubAmount = await fiatCurrencyService.convertAmount(usdAmount, 'USD', 'RUB');
      
      if (!rubAmount || rubAmount <= 0) {
        throw new Error(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: $${usdAmount} ‚Üí ‚ÇΩ${rubAmount}`);
      }
      
      if (rubAmount < 5000 || rubAmount > 20000) {
        console.warn(`  ‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: $${usdAmount} ‚Üí ‚ÇΩ${rubAmount}`);
      }
      
      console.log(`  ‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: $${usdAmount} ‚Üí ‚ÇΩ${rubAmount.toFixed(2)}`);
    });

    // –¢–µ—Å—Ç 2.3: –û–±—Ä–∞—Ç–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è
    await this.testAsync('2.3 –û–±—Ä–∞—Ç–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è', async () => {
      const originalAmount = 100;
      
      // USD ‚Üí EUR ‚Üí USD
      const eurAmount = await fiatCurrencyService.convertAmount(originalAmount, 'USD', 'EUR');
      const backToUsd = await fiatCurrencyService.convertAmount(eurAmount, 'EUR', 'USD');
      
      const difference = Math.abs(originalAmount - backToUsd);
      const tolerance = 0.1; // 10 —Ü–µ–Ω—Ç–æ–≤ —Ç–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ—Å—Ç—å –∏–∑-–∑–∞ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è
      
      if (difference > tolerance) {
        throw new Error(`–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –ø—Ä–∏ –æ–±—Ä–∞—Ç–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: ${difference.toFixed(4)}`);
      }
      
      console.log(`  ‚úÖ –û–±—Ä–∞—Ç–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: $${originalAmount} ‚Üí ‚Ç¨${eurAmount.toFixed(2)} ‚Üí $${backToUsd.toFixed(2)} (—Ä–∞–∑–Ω–∏—Ü–∞: $${difference.toFixed(4)})`);
    });

    // –¢–µ—Å—Ç 2.4: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –≤–∞–ª—é—Ç
    await this.testAsync('2.4 –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –≤–∞–ª—é—Ç', async () => {
      const rate = await fiatCurrencyService.getExchangeRate('USD', 'USD');
      const amount = await fiatCurrencyService.convertAmount(100, 'USD', 'USD');
      
      if (rate !== 1.0) {
        throw new Error(`–ö—É—Ä—Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –≤–∞–ª—é—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 1.0, –ø–æ–ª—É—á–µ–Ω: ${rate}`);
      }
      
      if (amount !== 100) {
        throw new Error(`–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –≤–∞–ª—é—Ç –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—É—é —Å—É–º–º—É, –ø–æ–ª—É—á–µ–Ω–æ: ${amount}`);
      }
      
      console.log('  ‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –≤–∞–ª—é—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    });
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç
   */
  async testCurrencyFormatting() {
    console.log('\nüé® –≠–¢–ê–ü 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç');

    // –¢–µ—Å—Ç 3.1: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞–ª—é—Ç
    this.test('3.1 –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞–ª—é—Ç', () => {
      const testCases = [
        { amount: 1234.56, currency: 'USD', expected: '$1,234.56' },
        { amount: 1234.56, currency: 'RUB', expected: '1,234.56 ‚ÇΩ' },
        { amount: 1234.56, currency: 'EUR', expected: '‚Ç¨1,234.56' },
        { amount: 1234, currency: 'JPY', expected: '¬•1,234' }, // –ë–µ–∑ –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏
        { amount: 1234, currency: 'KRW', expected: '‚Ç©1,234' }
      ];

      for (const testCase of testCases) {
        const formatted = fiatCurrencyService.formatAmount(testCase.amount, testCase.currency);
        console.log(`    ${testCase.currency}: ${testCase.amount} ‚Üí ${formatted}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        const metadata = fiatCurrencyService.getCurrencyMetadata(testCase.currency);
        if (!formatted.includes(metadata.symbol)) {
          throw new Error(`–û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã: ${formatted}`);
        }
      }
      
      console.log('  ‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –≤–∞–ª—é—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    });

    // –¢–µ—Å—Ç 3.2: –ú—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    await this.testAsync('3.2 –ú—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ', async () => {
      const conversions = await fiatCurrencyService.getMultiCurrencyDisplay(100, 'USD', ['RUB', 'EUR', 'CNY']);
      
      if (conversions.length === 0) {
        throw new Error('–ú—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≤–µ—Ä–Ω—É–ª–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
      }
      
      console.log('    –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ $100:');
      for (const conversion of conversions) {
        console.log(`      ${conversion.flag} ${conversion.formatted}`);
        
        if (!conversion.currency || !conversion.amount || !conversion.formatted) {
          throw new Error(`–ù–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: ${JSON.stringify(conversion)}`);
        }
      }
      
      console.log('  ‚úÖ –ú—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    });
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FiatReserveService
   */
  async testFiatReserveService() {
    console.log('\nüí∞ –≠–¢–ê–ü 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FiatReserveService');

    // –¢–µ—Å—Ç 4.1: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
    await this.testAsync('4.1 –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞', async () => {
      const userId = new mongoose.Types.ObjectId().toString();
      
      const usdBalance = await fiatReserveService.getAvailableBalance(userId, 'USD');
      const rubBalance = await fiatReserveService.getAvailableBalance(userId, 'RUB');
      
      if (usdBalance <= 0 || rubBalance <= 0) {
        throw new Error('–¢–µ—Å—Ç–æ–≤—ã–µ –±–∞–ª–∞–Ω—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –±–æ–ª—å—à–µ 0');
      }
      
      console.log(`  ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –±–∞–ª–∞–Ω—Å—ã: $${usdBalance}, ‚ÇΩ${rubBalance}`);
    });

    // –¢–µ—Å—Ç 4.2: –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤
    await this.testAsync('4.2 –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤', async () => {
      const userId = new mongoose.Types.ObjectId().toString();
      const orderId = new mongoose.Types.ObjectId().toString();
      
      const reserveResult = await fiatReserveService.reserveForOrder(
        userId, 
        orderId, 
        100, 
        'USD', 
        100, // amountInUSD
        1.0  // exchangeRate USD/USD
      );
      
      if (!reserveResult.success) {
        throw new Error(`–û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è: ${reserveResult.error}`);
      }
      
      console.log(`  ‚úÖ –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ: $${reserveResult.amountReserved} (ID: ${reserveResult.reserveId})`);
    });

    // –¢–µ—Å—Ç 4.3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
    await this.testAsync('4.3 –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞', async () => {
      const userId = new mongoose.Types.ObjectId().toString();
      
      // –†–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞
      const orderId = new mongoose.Types.ObjectId().toString();
      await fiatReserveService.reserveForOrder(userId, orderId, 50, 'EUR');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å
      const reservedBalance = await fiatReserveService.getReservedBalance(userId, 'EUR');
      
      if (reservedBalance < 50) {
        throw new Error(`–ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${reservedBalance}, –æ–∂–∏–¥–∞–ª–æ—Å—å –º–∏–Ω–∏–º—É–º 50`);
      }
      
      console.log(`  ‚úÖ –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å EUR: ‚Ç¨${reservedBalance}`);
    });
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
   */
  async testMultiCurrencyOperations() {
    console.log('\nüåç –≠–¢–ê–ü 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π');

    // –¢–µ—Å—Ç 5.1: –†–∞–±–æ—Ç–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏
    await this.testAsync('5.1 –û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏', async () => {
      const userId = new mongoose.Types.ObjectId().toString();
      const currencies = ['USD', 'EUR', 'CNY', 'JPY'];
      const reserves = [];

      for (const currency of currencies) {
        const orderId = new mongoose.Types.ObjectId().toString();
        const amount = currency === 'JPY' ? 10000 : 100; // JPY –±–µ–∑ –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏
        
        const result = await fiatReserveService.reserveForOrder(userId, orderId, amount, currency);
        
        if (!result.success) {
          throw new Error(`–û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è ${currency}: ${result.error}`);
        }
        
        reserves.push({ currency, amount, reserveId: result.reserveId });
        console.log(`    ‚úÖ –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ: ${fiatCurrencyService.formatAmount(amount, currency)}`);
      }

      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const stats = await fiatReserveService.getUserReserveStats(userId);
      
      if (stats.length === 0) {
        throw new Error('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∑–µ—Ä–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      }
      
      console.log(`  ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∑–µ—Ä–≤–æ–≤: ${stats.length} –≤–∞–ª—é—Ç`);
    });

    // –¢–µ—Å—Ç 5.2: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –ø—Ä–∏ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–∏
    await this.testAsync('5.2 –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –ø—Ä–∏ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–∏', async () => {
      const userId = new mongoose.Types.ObjectId().toString();
      const orderId = new mongoose.Types.ObjectId().toString();
      
      // –†–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º 100 EUR, —Å–µ—Ä–≤–∏—Å –¥–æ–ª–∂–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ USD
      const result = await fiatReserveService.reserveForOrder(userId, orderId, 100, 'EUR');
      
      if (!result.success) {
        throw new Error(`–û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è: ${result.error}`);
      }
      
      if (!result.amountInUSD || result.amountInUSD <= 0) {
        throw new Error(`–ù–µ–≤–µ—Ä–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ USD: ${result.amountInUSD}`);
      }
      
      console.log(`  ‚úÖ –ê–≤—Ç–æ–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: ‚Ç¨100 ‚Üí $${result.amountInUSD.toFixed(2)}`);
    });
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
   */
  async testEdgeCases() {
    console.log('\n‚ö° –≠–¢–ê–ü 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤');

    // –¢–µ—Å—Ç 6.1: –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–∞–ª—é—Ç—ã
    await this.testAsync('6.1 –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–∞–ª—é—Ç—ã', async () => {
      try {
        await fiatCurrencyService.getExchangeRate('INVALID', 'USD');
        throw new Error('–î–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –æ—à–∏–±–∫–∞ –¥–ª—è –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–π –≤–∞–ª—é—Ç—ã');
      } catch (error) {
        if (error.message.includes('–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è')) {
          console.log('  ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–π –≤–∞–ª—é—Ç—ã');
        } else {
          throw error;
        }
      }
    });

    // –¢–µ—Å—Ç 6.2: –ù—É–ª–µ–≤—ã–µ –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Å—É–º–º—ã
    await this.testAsync('6.2 –ù—É–ª–µ–≤—ã–µ –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Å—É–º–º—ã', async () => {
      const zeroResult = await fiatCurrencyService.convertAmount(0, 'USD', 'RUB');
      const negativeResult = await fiatCurrencyService.convertAmount(-100, 'USD', 'RUB');
      
      if (zeroResult !== 0) {
        throw new Error(`–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è 0 –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 0, –ø–æ–ª—É—á–µ–Ω–æ: ${zeroResult}`);
      }
      
      if (negativeResult !== 0) {
        throw new Error(`–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π —Å—É–º–º—ã –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 0, –ø–æ–ª—É—á–µ–Ω–æ: ${negativeResult}`);
      }
      
      console.log('  ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω—É–ª–µ–≤—ã—Ö –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —Å—É–º–º');
    });

    // –¢–µ—Å—Ç 6.3: –û—á–µ–Ω—å –±–æ–ª—å—à–∏–µ —Å—É–º–º—ã
    await this.testAsync('6.3 –û—á–µ–Ω—å –±–æ–ª—å—à–∏–µ —Å—É–º–º—ã', async () => {
      const bigAmount = 999999999.99;
      const formatted = fiatCurrencyService.formatAmount(bigAmount, 'USD');
      
      if (!formatted.includes('$') || !formatted.includes(',')) {
        throw new Error(`–ù–µ–≤–µ—Ä–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ–ª—å—à–æ–π —Å—É–º–º—ã: ${formatted}`);
      }
      
      console.log(`  ‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ–ª—å—à–∏—Ö —Å—É–º–º: ${formatted}`);
    });

    // –¢–µ—Å—Ç 6.4: –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    this.test('6.4 –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞', () => {
      const statsBefore = fiatCurrencyService.getStats();
      fiatCurrencyService.clearCache();
      const statsAfter = fiatCurrencyService.getStats();
      
      if (statsAfter.cachedRates !== 0) {
        throw new Error(`–ö—ç—à –Ω–µ –æ—á–∏—Å—Ç–∏–ª—Å—è: ${statsAfter.cachedRates} –∑–∞–ø–∏—Å–µ–π –æ—Å—Ç–∞–ª–æ—Å—å`);
      }
      
      console.log('  ‚úÖ –ö—ç—à —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω');
    });
  }

  /**
   * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
   */
  test(name, testFunction) {
    try {
      testFunction();
      this.testResults.passed++;
    } catch (error) {
      console.error(`  ‚ùå ${name}: ${error.message}`);
      this.testResults.failed++;
      this.testResults.errors.push(`${name}: ${error.message}`);
    }
  }

  /**
   * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
   */
  async testAsync(name, testFunction) {
    try {
      await testFunction();
      this.testResults.passed++;
    } catch (error) {
      console.error(`  ‚ùå ${name}: ${error.message}`);
      this.testResults.failed++;
      this.testResults.errors.push(`${name}: ${error.message}`);
    }
  }

  /**
   * –ü–µ—á–∞—Ç—å –æ—Ç—á–µ—Ç–∞ –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
   */
  printTestReport() {
    console.log('\nüìä –û–¢–ß–ï–¢ –û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò');
    console.log('='.repeat(60));
    console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${this.testResults.passed}`);
    console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${this.testResults.failed}`);
    console.log(`üìä –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${((this.testResults.passed / (this.testResults.passed + this.testResults.failed)) * 100).toFixed(1)}%`);
    
    if (this.testResults.errors.length > 0) {
      console.log('\n‚ùå –û–®–ò–ë–ö–ò:');
      this.testResults.errors.forEach((error, index) => {
        console.log(`  ${index + 1}. ${error}`);
      });
    } else {
      console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!');
    }
    
    console.log('='.repeat(60));
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  const test = new MultiCurrencyP2PTest();
  test.runAllTests()
    .then(() => {
      console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
      process.exit(test.testResults.failed > 0 ? 1 : 0);
    })
    .catch((error) => {
      console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      process.exit(1);
    });
}

module.exports = MultiCurrencyP2PTest;