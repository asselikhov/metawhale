/**
 * –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–µ–Ω –≤ –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–æ–π P2P —Å–∏—Å—Ç–µ–º–µ
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ü–µ–Ω –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö
 */

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–µ–Ω –≤ P2P —Å–∏—Å—Ç–µ–º–µ...\n');

// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ü–µ–Ω
try {
  console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ü–µ–Ω...');
  const p2pService = require('../src/services/p2pService');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ—Ç–æ–¥ getMarketPriceSuggestion —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (typeof p2pService.getMarketPriceSuggestion === 'function') {
    console.log('   ‚úÖ –ú–µ—Ç–æ–¥ getMarketPriceSuggestion –¥–æ—Å—Ç—É–ø–µ–Ω');
  } else {
    console.log('   ‚ùå –ú–µ—Ç–æ–¥ getMarketPriceSuggestion –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ p2pService:', error.message);
}

// –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞–±–æ—Ç—ã —Å –≤–∞–ª—é—Ç–∞–º–∏
try {
  console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞–±–æ—Ç—ã —Å –≤–∞–ª—é—Ç–∞–º–∏...');
  const fiatCurrencyService = require('../src/services/fiatCurrencyService');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  const requiredMethods = [
    'getExchangeRate',
    'convertAmount',
    'formatAmount',
    'getSupportedCurrencies'
  ];
  
  for (const method of requiredMethods) {
    if (typeof fiatCurrencyService[method] === 'function') {
      console.log(`   ‚úÖ –ú–µ—Ç–æ–¥ ${method} –¥–æ—Å—Ç—É–ø–µ–Ω`);
    } else {
      console.log(`   ‚ùå –ú–µ—Ç–æ–¥ ${method} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–∞–ª—é—Ç—ã
  const currencies = fiatCurrencyService.getSupportedCurrencies();
  console.log(`   üìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–∞–ª—é—Ç—ã: ${currencies.length}`);
  currencies.slice(0, 5).forEach(currency => {
    console.log(`      ${currency.flag} ${currency.code} - ${currency.nameRu}`);
  });
  if (currencies.length > 5) {
    console.log(`      ... –∏ –µ—â–µ ${currencies.length - 5} –≤–∞–ª—é—Ç`);
  }
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ fiatCurrencyService:', error.message);
}

// –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç
async function testCurrencyConversion() {
  try {
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç...');
    const fiatCurrencyService = require('../src/services/fiatCurrencyService');
    
    // –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: 1000 RUB –≤ USD
    try {
      const rubAmount = 1000;
      const usdAmount = await fiatCurrencyService.convertAmount(rubAmount, 'RUB', 'USD');
      const formattedUSD = fiatCurrencyService.formatAmount(usdAmount, 'USD');
      console.log(`   ‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è ${rubAmount} RUB –≤ USD: ${formattedUSD}`);
    } catch (error) {
      console.log(`   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ RUB->USD: ${error.message}`);
    }
    
    // –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: 100 USD –≤ EUR
    try {
      const usdAmount = 100;
      const eurAmount = await fiatCurrencyService.convertAmount(usdAmount, 'USD', 'EUR');
      const formattedEUR = fiatCurrencyService.formatAmount(eurAmount, 'EUR');
      console.log(`   ‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è ${usdAmount} USD –≤ EUR: ${formattedEUR}`);
    } catch (error) {
      console.log(`   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ USD->EUR: ${error.message}`);
    }
    
    // –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç...');
    const testAmount = 1234.56;
    const testCurrencies = ['USD', 'RUB', 'EUR', 'JPY'];
    
    for (const currency of testCurrencies) {
      try {
        const formatted = fiatCurrencyService.formatAmount(testAmount, currency);
        const metadata = fiatCurrencyService.getCurrencyMetadata(currency);
        console.log(`   ${metadata.flag} ${currency}: ${formatted}`);
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ${currency}: ${error.message}`);
      }
    }
  } catch (error) {
    console.error('   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:', error.message);
  }
}

// –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
try {
  console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º P2PHandler.js
  const p2pHandlerPath = require.resolve('../src/handlers/P2PHandler.js');
  delete require.cache[p2pHandlerPath]; // –û—á–∏—â–∞–µ–º –∫—ç—à
  require(p2pHandlerPath);
  console.log('   ‚úÖ P2PHandler.js —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
  
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞:', error.message);
}

// –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
testCurrencyConversion()
  .then(() => {
    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('   ‚úÖ –°–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω–∏—è —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ü–µ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('   ‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç—ã —Å –≤–∞–ª—é—Ç–∞–º–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç');
    console.log('   ‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   ‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('   ‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞');

    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('   –¢–µ–ø–µ—Ä—å —Ü–µ–Ω—ã –≤ P2P —Å–∏—Å—Ç–µ–º–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏');
    console.log('   –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤–∞–ª—é—Ç—É.');
  })
  .catch(error => {
    console.error('\nüí• –û—à–∏–±–∫–∞ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∞—Ö:', error.message);
  });