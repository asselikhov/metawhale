/**
 * –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –±–∞–ª–∞–Ω—Å–∞–º–∏ –∏ –∫–æ—à–µ–ª—å–∫–∞–º–∏ –≤ —Ä–∞–∑–Ω—ã—Ö —Å–µ—Ç—è—Ö
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π asselikhov –∏ liveliness1
 */

console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å–æ–≤ –∏ –∫–æ—à–µ–ª—å–∫–æ–≤...\n');

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ userNetworkService
try {
  console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ userNetworkService...');
  const userNetworkService = require('../src/services/userNetworkService');
  console.log('   ‚úÖ userNetworkService –∑–∞–≥—Ä—É–∂–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤
  const requiredMethods = [
    'getUserWalletForNetwork',
    'checkWalletExistsInNetwork'
  ];
  
  for (const method of requiredMethods) {
    if (typeof userNetworkService[method] === 'function') {
      console.log(`   ‚úÖ ${method} –º–µ—Ç–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω`);
    } else {
      console.log(`   ‚ùå ${method} –º–µ—Ç–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  }
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –≤ userNetworkService:', error.message);
  // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
}

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ multiChainWalletService
try {
  console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ multiChainWalletService...');
  const multiChainWalletService = require('../src/services/multiChainWalletService');
  console.log('   ‚úÖ multiChainWalletService –∑–∞–≥—Ä—É–∂–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤
  const requiredMethods = [
    'getMultiChainWalletInfo',
    'getNetworkBalances',
    'getPolygonTokenBalance',
    'getTronNativeBalance',
    'getEVMTokenBalance'
  ];
  
  for (const method of requiredMethods) {
    if (typeof multiChainWalletService[method] === 'function') {
      console.log(`   ‚úÖ ${method} –º–µ—Ç–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω`);
    } else {
      console.log(`   ‚ùå ${method} –º–µ—Ç–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  }
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –≤ multiChainWalletService:', error.message);
  // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
}

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ walletService
try {
  console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ walletService...');
  const walletService = require('../src/services/walletService');
  console.log('   ‚úÖ walletService –∑–∞–≥—Ä—É–∂–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤
  const balanceMethods = [
    'getCESBalance',
    'getPOLBalance'
  ];
  
  for (const method of balanceMethods) {
    if (typeof walletService[method] === 'function') {
      console.log(`   ‚úÖ ${method} –º–µ—Ç–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω`);
    } else {
      console.log(`   ‚ùå ${method} –º–µ—Ç–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  }
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –≤ walletService:', error.message);
  // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
}

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–∏
try {
  console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ User...');
  const { User } = require('../src/database/models');
  console.log('   ‚úÖ –ú–æ–¥–µ–ª—å User –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –±–µ–∑ –æ—à–∏–±–æ–∫');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º–æ–¥–µ–ª—å –∏–º–µ–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è
  const userSchema = User.schema;
  if (userSchema.paths.walletAddress) {
    console.log('   ‚úÖ –ü–æ–ª–µ walletAddress –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å—Ö–µ–º–µ');
  } else {
    console.log('   ‚ùå –ü–æ–ª–µ walletAddress –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å—Ö–µ–º–µ');
  }
  
  if (userSchema.paths.chatId) {
    console.log('   ‚úÖ –ü–æ–ª–µ chatId –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å—Ö–µ–º–µ');
  } else {
    console.log('   ‚ùå –ü–æ–ª–µ chatId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å—Ö–µ–º–µ');
  }
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –≤ –º–æ–¥–µ–ª–∏ User:', error.message);
  // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
}

// 5. –°–∏–º—É–ª—è—Ü–∏—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
console.log('\n5Ô∏è‚É£ –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤...');

// –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
try {
  console.log('   üì± –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞');
  const userNetworkService = require('../src/services/userNetworkService');
  
  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  const testAddress = '0x1A1432d6D4eFe75651f2c39DC1Ec6a5D936f401d';
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è Polygon (–¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å)
  console.log('   üü£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Polygon...');
  const polygonExists = await userNetworkService.checkWalletExistsInNetwork(testAddress, 'polygon');
  console.log(`   üü£ Polygon wallet exists: ${polygonExists}`);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è TRON (–Ω–µ –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å)
  console.log('   üî¥ –ü—Ä–æ–≤–µ—Ä–∫–∞ TRON...');
  const tronExists = await userNetworkService.checkWalletExistsInNetwork(testAddress, 'tron');
  console.log(`   üî¥ TRON wallet exists: ${tronExists}`);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è BSC (–Ω–µ –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å)  
  console.log('   üü° –ü—Ä–æ–≤–µ—Ä–∫–∞ BSC...');
  const bscExists = await userNetworkService.checkWalletExistsInNetwork(testAddress, 'bsc');
  console.log(`   üü° BSC wallet exists: ${bscExists}`);
  
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏ 1:', error.message);
}

// –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—à–µ–ª—å–∫–µ
try {
  console.log('\n   üíº –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—à–µ–ª—å–∫–µ');
  const userNetworkService = require('../src/services/userNetworkService');
  
  // –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–∫–∞–∫ asselikhov)
  const testChatId = '942851377';
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è Polygon
  console.log('   üü£ –ü–æ–ª—É—á–µ–Ω–∏–µ wallet info –¥–ª—è Polygon...');
  const polygonWallet = await userNetworkService.getUserWalletForNetwork(testChatId, 'polygon');
  console.log(`   üü£ Polygon wallet info:`, {
    hasWallet: polygonWallet.hasWallet,
    network: polygonWallet.network
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è TRON
  console.log('   üî¥ –ü–æ–ª—É—á–µ–Ω–∏–µ wallet info –¥–ª—è TRON...');
  const tronWallet = await userNetworkService.getUserWalletForNetwork(testChatId, 'tron');
  console.log(`   üî¥ TRON wallet info:`, {
    hasWallet: tronWallet.hasWallet,
    network: tronWallet.network
  });
  
} catch (error) {
  console.error('   ‚ùå –û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏ 2:', error.message);
}

console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

console.log('\nüìã –†–µ–∑—é–º–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:');
console.log('   ‚úÖ –£–ª—É—á—à–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ getUserWalletForNetwork');
console.log('   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –º–µ—Ç–æ–¥ checkWalletExistsInNetwork');  
console.log('   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ñ–∞–ª—å—à–∏–≤—ã–º–∏ –∫–æ—à–µ–ª—å–∫–∞–º–∏ –≤ –¥—Ä—É–≥–∏—Ö —Å–µ—Ç—è—Ö');
console.log('   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –ª–æ–≥–∏ –≤ getMultiChainWalletInfo');
console.log('   ‚úÖ –ö–æ—à–µ–ª—å–∫–∏ –≤ Polygon –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∞ –Ω–µ –ø–æ –±–∞–ª–∞–Ω—Å—É');

console.log('\nüéØ –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
console.log('   ‚Ä¢ asselikhov: –∫–æ—à–µ–ª–µ–∫ —Ç–æ–ª—å–∫–æ –≤ Polygon, –≤ –¥—Ä—É–≥–∏—Ö —Å–µ—Ç—è—Ö - –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç—å');
console.log('   ‚Ä¢ liveliness1: –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–≤ –≤ Polygon');
console.log('   ‚Ä¢ –ù–µ—Ç —Ñ–∞–ª—å—à–∏–≤—ã—Ö –Ω—É–ª–µ–≤—ã—Ö –±–∞–ª–∞–Ω—Å–æ–≤ –≤ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ—à–µ–ª—å–∫–∞—Ö');

console.log('\nüöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–æ—Ç–æ–≤—ã –∫ –¥–µ–ø–ª–æ—é!');
process.exit(0);